{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos1\\\\Documents\\\\DEV\\\\New\\\\kanban\\\\src\\\\context\\\\KanbanContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Estado inicial do Kanban\nconst defaultState = {\n  tasks: {},\n  columns: {\n    'column-1': {\n      id: 'column-1',\n      title: 'A fazer',\n      taskIds: [],\n      color: '#0079BF'\n    },\n    'column-2': {\n      id: 'column-2',\n      title: 'Em andamento',\n      taskIds: [],\n      color: '#FF9D2A'\n    },\n    'column-3': {\n      id: 'column-3',\n      title: 'Concluído',\n      taskIds: [],\n      color: '#61BD4F'\n    }\n  },\n  columnOrder: ['column-1', 'column-2', 'column-3'],\n  userPreferences: {\n    theme: 'light',\n    filters: {\n      tags: [],\n      assignees: [],\n      priorities: []\n    }\n  }\n};\n\n// Carregar estado do localStorage ou usar o padrão\nconst loadFromLocalStorage = () => {\n  try {\n    const savedState = localStorage.getItem('kanbanState');\n    if (savedState) {\n      // Convertendo strings de data de volta para objetos Date\n      const parsedState = JSON.parse(savedState);\n\n      // Converter datas de tarefas\n      Object.keys(parsedState.tasks).forEach(taskId => {\n        const task = parsedState.tasks[taskId];\n        if (task.dueDate) task.dueDate = new Date(task.dueDate);\n        if (task.createdAt) task.createdAt = new Date(task.createdAt);\n        if (task.updatedAt) task.updatedAt = new Date(task.updatedAt);\n\n        // Converter datas de comentários\n        if (task.comments) {\n          task.comments.forEach(comment => {\n            if (comment.createdAt) comment.createdAt = new Date(comment.createdAt);\n          });\n        }\n      });\n      return parsedState;\n    }\n  } catch (error) {\n    console.error('Erro ao carregar estado do localStorage:', error);\n  }\n  return defaultState;\n};\nconst initialState = loadFromLocalStorage();\n\n// Tipos de ações\n\n// Reducer para gerenciar o estado\nconst kanbanReducer = (state, action) => {\n  let newState = state;\n  const now = new Date();\n  switch (action.type) {\n    case 'ADD_TASK':\n      {\n        const {\n          columnId,\n          content,\n          description,\n          priority,\n          dueDate,\n          tags,\n          assignedTo,\n          coverImage\n        } = action.payload;\n        const taskId = uuidv4();\n        const newTask = {\n          id: taskId,\n          columnId,\n          content,\n          description,\n          priority,\n          dueDate,\n          tags: tags || [],\n          assignedTo,\n          coverImage,\n          checklist: [],\n          comments: [],\n          isArchived: false,\n          createdAt: now,\n          updatedAt: now\n        };\n        const column = state.columns[columnId];\n        const newTaskIds = [...column.taskIds, taskId];\n        newState = {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            [taskId]: newTask\n          },\n          columns: {\n            ...state.columns,\n            [columnId]: {\n              ...column,\n              taskIds: newTaskIds\n            }\n          }\n        };\n        break;\n      }\n    case 'MOVE_TASK':\n      {\n        const payload = action.payload;\n\n        // Compatibilidade com o formato antigo e novo\n        let source, destination;\n        if ('source' in payload && 'destination' in payload) {\n          // Formato antigo\n          source = payload.source;\n          destination = payload.destination;\n        } else if ('sourceColumnId' in payload && 'destinationColumnId' in payload) {\n          // Formato novo\n          source = {\n            columnId: payload.sourceColumnId,\n            index: payload.sourceIndex\n          };\n          destination = {\n            columnId: payload.destinationColumnId,\n            index: payload.destinationIndex\n          };\n        } else {\n          return state;\n        }\n\n        // Se não houver destino, não faz nada\n        if (!destination) {\n          return state;\n        }\n\n        // Se a origem e o destino forem iguais, não faz nada\n        if (source.columnId === destination.columnId && source.index === destination.index) {\n          return state;\n        }\n        const sourceColumn = state.columns[source.columnId];\n        const destinationColumn = state.columns[destination.columnId];\n\n        // Verificar limite WIP, se definido\n        if (source.columnId !== destination.columnId && destinationColumn.wip && destinationColumn.taskIds.length >= destinationColumn.wip) {\n          alert(`Limite de tarefas em andamento (${destinationColumn.wip}) atingido para a coluna \"${destinationColumn.title}\"`);\n          return state;\n        }\n\n        // Mover na mesma coluna\n        if (source.columnId === destination.columnId) {\n          const newTaskIds = [...sourceColumn.taskIds];\n          const [removed] = newTaskIds.splice(source.index, 1);\n          newTaskIds.splice(destination.index, 0, removed);\n          newState = {\n            ...state,\n            columns: {\n              ...state.columns,\n              [source.columnId]: {\n                ...sourceColumn,\n                taskIds: newTaskIds\n              }\n            }\n          };\n        } else {\n          // Mover entre colunas diferentes\n          const sourceTaskIds = [...sourceColumn.taskIds];\n          const [removed] = sourceTaskIds.splice(source.index, 1);\n          const destinationTaskIds = [...destinationColumn.taskIds];\n          destinationTaskIds.splice(destination.index, 0, removed);\n          newState = {\n            ...state,\n            columns: {\n              ...state.columns,\n              [source.columnId]: {\n                ...sourceColumn,\n                taskIds: sourceTaskIds\n              },\n              [destination.columnId]: {\n                ...destinationColumn,\n                taskIds: destinationTaskIds\n              }\n            }\n          };\n        }\n        break;\n      }\n    case 'UPDATE_TASK':\n      {\n        const {\n          taskId,\n          content,\n          description,\n          priority,\n          dueDate,\n          tags,\n          assignedTo,\n          coverImage\n        } = action.payload;\n        newState = {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            [taskId]: {\n              ...state.tasks[taskId],\n              ...(content !== undefined && {\n                content\n              }),\n              ...(description !== undefined && {\n                description\n              }),\n              ...(priority !== undefined && {\n                priority\n              }),\n              ...(dueDate !== undefined && {\n                dueDate\n              }),\n              ...(tags !== undefined && {\n                tags\n              }),\n              ...(assignedTo !== undefined && {\n                assignedTo\n              }),\n              ...(coverImage !== undefined && {\n                coverImage\n              }),\n              updatedAt: now\n            }\n          }\n        };\n        break;\n      }\n    case 'DELETE_TASK':\n      {\n        const {\n          taskId,\n          columnId\n        } = action.payload;\n        const column = state.columns[columnId];\n        const newTaskIds = column.taskIds.filter(id => id !== taskId);\n        const {\n          [taskId]: _,\n          ...remainingTasks\n        } = state.tasks;\n        newState = {\n          ...state,\n          tasks: remainingTasks,\n          columns: {\n            ...state.columns,\n            [columnId]: {\n              ...column,\n              taskIds: newTaskIds\n            }\n          }\n        };\n        break;\n      }\n    case 'ADD_COLUMN':\n      {\n        const {\n          title,\n          color,\n          wip\n        } = action.payload;\n        const newColumnId = uuidv4();\n        newState = {\n          ...state,\n          columns: {\n            ...state.columns,\n            [newColumnId]: {\n              id: newColumnId,\n              title,\n              taskIds: [],\n              color,\n              wip\n            }\n          },\n          columnOrder: [...state.columnOrder, newColumnId]\n        };\n        break;\n      }\n    case 'UPDATE_COLUMN':\n      {\n        const {\n          columnId,\n          title,\n          color,\n          wip\n        } = action.payload;\n        newState = {\n          ...state,\n          columns: {\n            ...state.columns,\n            [columnId]: {\n              ...state.columns[columnId],\n              ...(title !== undefined && {\n                title\n              }),\n              ...(color !== undefined && {\n                color\n              }),\n              ...(wip !== undefined && {\n                wip\n              })\n            }\n          }\n        };\n        break;\n      }\n    case 'DELETE_COLUMN':\n      {\n        const {\n          columnId\n        } = action.payload;\n        const column = state.columns[columnId];\n\n        // Remover todas as tarefas da coluna\n        const newTasks = {\n          ...state.tasks\n        };\n        column.taskIds.forEach(taskId => {\n          delete newTasks[taskId];\n        });\n        const {\n          [columnId]: _,\n          ...remainingColumns\n        } = state.columns;\n        const newColumnOrder = state.columnOrder.filter(id => id !== columnId);\n        newState = {\n          ...state,\n          tasks: newTasks,\n          columns: remainingColumns,\n          columnOrder: newColumnOrder\n        };\n        break;\n      }\n    case 'REORDER_COLUMN':\n      {\n        const {\n          columnId,\n          destinationIndex\n        } = action.payload;\n\n        // Encontrar a posição atual da coluna\n        const columnIndex = state.columnOrder.findIndex(id => id === columnId);\n\n        // Se não encontrar a coluna ou o índice for o mesmo, não faz nada\n        if (columnIndex === -1 || columnIndex === destinationIndex) {\n          return state;\n        }\n\n        // Criar uma nova ordem de colunas\n        const newColumnOrder = [...state.columnOrder];\n\n        // Remover a coluna da posição atual\n        newColumnOrder.splice(columnIndex, 1);\n\n        // Inserir a coluna na nova posição\n        newColumnOrder.splice(destinationIndex, 0, columnId);\n        return {\n          ...state,\n          columnOrder: newColumnOrder\n        };\n      }\n    case 'ADD_TAG':\n      {\n        const {\n          taskId,\n          tag\n        } = action.payload;\n        const task = state.tasks[taskId];\n        const existingTags = task.tags || [];\n        if (!existingTags.includes(tag)) {\n          newState = {\n            ...state,\n            tasks: {\n              ...state.tasks,\n              [taskId]: {\n                ...task,\n                tags: [...existingTags, tag],\n                updatedAt: now\n              }\n            }\n          };\n        } else {\n          return state;\n        }\n        break;\n      }\n    case 'REMOVE_TAG':\n      {\n        const {\n          taskId,\n          tag\n        } = action.payload;\n        const task = state.tasks[taskId];\n        const existingTags = task.tags || [];\n        newState = {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            [taskId]: {\n              ...task,\n              tags: existingTags.filter(t => t !== tag),\n              updatedAt: now\n            }\n          }\n        };\n        break;\n      }\n    case 'ADD_COMMENT':\n      {\n        const {\n          taskId,\n          text,\n          author\n        } = action.payload;\n        const task = state.tasks[taskId];\n        const existingComments = task.comments || [];\n        const newComment = {\n          id: uuidv4(),\n          text,\n          author,\n          createdAt: now\n        };\n        newState = {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            [taskId]: {\n              ...task,\n              comments: [...existingComments, newComment],\n              updatedAt: now\n            }\n          }\n        };\n        break;\n      }\n    case 'DELETE_COMMENT':\n      {\n        const {\n          taskId,\n          commentId\n        } = action.payload;\n        const task = state.tasks[taskId];\n        const existingComments = task.comments || [];\n        newState = {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            [taskId]: {\n              ...task,\n              comments: existingComments.filter(comment => comment.id !== commentId),\n              updatedAt: now\n            }\n          }\n        };\n        break;\n      }\n    case 'ADD_CHECKLIST_ITEM':\n      {\n        const {\n          taskId,\n          text\n        } = action.payload;\n        const task = state.tasks[taskId];\n        const existingChecklist = task.checklist || [];\n        const newItem = {\n          id: uuidv4(),\n          text,\n          isComplete: false\n        };\n        newState = {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            [taskId]: {\n              ...task,\n              checklist: [...existingChecklist, newItem],\n              updatedAt: now\n            }\n          }\n        };\n        break;\n      }\n    case 'TOGGLE_CHECKLIST_ITEM':\n      {\n        const {\n          taskId,\n          itemId\n        } = action.payload;\n        const task = state.tasks[taskId];\n        const existingChecklist = task.checklist || [];\n        newState = {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            [taskId]: {\n              ...task,\n              checklist: existingChecklist.map(item => item.id === itemId ? {\n                ...item,\n                isComplete: !item.isComplete\n              } : item),\n              updatedAt: now\n            }\n          }\n        };\n        break;\n      }\n    case 'DELETE_CHECKLIST_ITEM':\n      {\n        const {\n          taskId,\n          itemId\n        } = action.payload;\n        const task = state.tasks[taskId];\n        const existingChecklist = task.checklist || [];\n        newState = {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            [taskId]: {\n              ...task,\n              checklist: existingChecklist.filter(item => item.id !== itemId),\n              updatedAt: now\n            }\n          }\n        };\n        break;\n      }\n    case 'ARCHIVE_TASK':\n      {\n        const {\n          taskId\n        } = action.payload;\n        const task = state.tasks[taskId];\n        newState = {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            [taskId]: {\n              ...task,\n              isArchived: true,\n              updatedAt: now\n            }\n          }\n        };\n        break;\n      }\n    case 'RESTORE_TASK':\n      {\n        const {\n          taskId\n        } = action.payload;\n        const task = state.tasks[taskId];\n        newState = {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            [taskId]: {\n              ...task,\n              isArchived: false,\n              updatedAt: now\n            }\n          }\n        };\n        break;\n      }\n    case 'IMPORT_DATA':\n      {\n        newState = action.payload.data;\n        break;\n      }\n    default:\n      return state;\n  }\n\n  // Salvar no localStorage após cada ação\n  try {\n    localStorage.setItem('kanbanState', JSON.stringify(newState));\n  } catch (error) {\n    console.error('Erro ao salvar estado no localStorage:', error);\n  }\n  return newState;\n};\n\n// Interface do contexto\n\n// Criação do contexto\nconst KanbanContext = /*#__PURE__*/createContext(undefined);\n\n// Provider component\n\nexport const KanbanProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(kanbanReducer, initialState);\n  const exportData = () => {\n    const dataStr = JSON.stringify(state, null, 2);\n    const dataUri = `data:application/json;charset=utf-8,${encodeURIComponent(dataStr)}`;\n\n    // Criar um link temporário para download\n    const exportFileDefaultName = `kanban-backup-${new Date().toISOString().slice(0, 10)}.json`;\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  const importData = jsonData => {\n    try {\n      const data = JSON.parse(jsonData);\n      dispatch({\n        type: 'IMPORT_DATA',\n        payload: {\n          data\n        }\n      });\n    } catch (error) {\n      console.error('Erro ao importar dados:', error);\n      alert('Formato de arquivo inválido. Por favor, selecione um arquivo JSON válido.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(KanbanContext.Provider, {\n    value: {\n      state,\n      dispatch,\n      exportData,\n      importData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 611,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook para usar o contexto\n_s(KanbanProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = KanbanProvider;\nexport const useKanban = () => {\n  _s2();\n  const context = useContext(KanbanContext);\n  if (!context) {\n    throw new Error('useKanban deve ser usado dentro de um KanbanProvider');\n  }\n  return context;\n};\n_s2(useKanban, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"KanbanProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","v4","uuidv4","jsxDEV","_jsxDEV","defaultState","tasks","columns","id","title","taskIds","color","columnOrder","userPreferences","theme","filters","tags","assignees","priorities","loadFromLocalStorage","savedState","localStorage","getItem","parsedState","JSON","parse","Object","keys","forEach","taskId","task","dueDate","Date","createdAt","updatedAt","comments","comment","error","console","initialState","kanbanReducer","state","action","newState","now","type","columnId","content","description","priority","assignedTo","coverImage","payload","newTask","checklist","isArchived","column","newTaskIds","source","destination","sourceColumnId","index","sourceIndex","destinationColumnId","destinationIndex","sourceColumn","destinationColumn","wip","length","alert","removed","splice","sourceTaskIds","destinationTaskIds","undefined","filter","_","remainingTasks","newColumnId","newTasks","remainingColumns","newColumnOrder","columnIndex","findIndex","tag","existingTags","includes","t","text","author","existingComments","newComment","commentId","existingChecklist","newItem","isComplete","itemId","map","item","data","setItem","stringify","KanbanContext","KanbanProvider","children","_s","dispatch","exportData","dataStr","dataUri","encodeURIComponent","exportFileDefaultName","toISOString","slice","linkElement","document","createElement","setAttribute","click","importData","jsonData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useKanban","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Carlos1/Documents/DEV/New/kanban/src/context/KanbanContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { KanbanState, Task, Comment, ChecklistItem } from '../types/types';\n\n// Estado inicial do Kanban\nconst defaultState: KanbanState = {\n  tasks: {},\n  columns: {\n    'column-1': {\n      id: 'column-1',\n      title: 'A fazer',\n      taskIds: [],\n      color: '#0079BF',\n    },\n    'column-2': {\n      id: 'column-2',\n      title: 'Em andamento',\n      taskIds: [],\n      color: '#FF9D2A',\n    },\n    'column-3': {\n      id: 'column-3',\n      title: 'Concluído',\n      taskIds: [],\n      color: '#61BD4F',\n    },\n  },\n  columnOrder: ['column-1', 'column-2', 'column-3'],\n  userPreferences: {\n    theme: 'light',\n    filters: {\n      tags: [],\n      assignees: [],\n      priorities: [],\n    }\n  }\n};\n\n// Carregar estado do localStorage ou usar o padrão\nconst loadFromLocalStorage = (): KanbanState => {\n  try {\n    const savedState = localStorage.getItem('kanbanState');\n    if (savedState) {\n      // Convertendo strings de data de volta para objetos Date\n      const parsedState = JSON.parse(savedState);\n      \n      // Converter datas de tarefas\n      Object.keys(parsedState.tasks).forEach(taskId => {\n        const task = parsedState.tasks[taskId];\n        if (task.dueDate) task.dueDate = new Date(task.dueDate);\n        if (task.createdAt) task.createdAt = new Date(task.createdAt);\n        if (task.updatedAt) task.updatedAt = new Date(task.updatedAt);\n        \n        // Converter datas de comentários\n        if (task.comments) {\n          task.comments.forEach((comment: Comment) => {\n            if (comment.createdAt) comment.createdAt = new Date(comment.createdAt);\n          });\n        }\n      });\n      \n      return parsedState;\n    }\n  } catch (error) {\n    console.error('Erro ao carregar estado do localStorage:', error);\n  }\n  return defaultState;\n};\n\nconst initialState = loadFromLocalStorage();\n\n// Tipos de ações\ntype KanbanAction =\n  | { type: 'ADD_TASK'; payload: { columnId: string; content: string; description?: string; priority?: 'baixa' | 'média' | 'alta', dueDate?: Date, tags?: string[], assignedTo?: string, coverImage?: string } }\n  | { type: 'MOVE_TASK'; payload: { source: { columnId: string, index: number }, destination: { columnId: string, index: number } } }\n  | { type: 'MOVE_TASK'; payload: { taskId: string, sourceColumnId: string, destinationColumnId: string, sourceIndex: number, destinationIndex: number } }\n  | { type: 'UPDATE_TASK'; payload: { taskId: string; content?: string; description?: string; priority?: 'baixa' | 'média' | 'alta', dueDate?: Date, tags?: string[], assignedTo?: string, coverImage?: string } }\n  | { type: 'DELETE_TASK'; payload: { taskId: string; columnId: string } }\n  | { type: 'ADD_COLUMN'; payload: { title: string, color?: string, wip?: number } }\n  | { type: 'UPDATE_COLUMN'; payload: { columnId: string; title?: string, color?: string, wip?: number } }\n  | { type: 'DELETE_COLUMN'; payload: { columnId: string } }\n  | { type: 'REORDER_COLUMN'; payload: { columnId: string; destinationIndex: number } }\n  | { type: 'ADD_TAG'; payload: { taskId: string; tag: string } }\n  | { type: 'REMOVE_TAG'; payload: { taskId: string; tag: string } }\n  | { type: 'ADD_COMMENT'; payload: { taskId: string; text: string; author: string } }\n  | { type: 'DELETE_COMMENT'; payload: { taskId: string; commentId: string } }\n  | { type: 'ADD_CHECKLIST_ITEM'; payload: { taskId: string; text: string } }\n  | { type: 'TOGGLE_CHECKLIST_ITEM'; payload: { taskId: string; itemId: string } }\n  | { type: 'DELETE_CHECKLIST_ITEM'; payload: { taskId: string; itemId: string } }\n  | { type: 'ARCHIVE_TASK'; payload: { taskId: string } }\n  | { type: 'RESTORE_TASK'; payload: { taskId: string } }\n  | { type: 'IMPORT_DATA'; payload: { data: KanbanState } };\n\n// Reducer para gerenciar o estado\nconst kanbanReducer = (state: KanbanState, action: KanbanAction): KanbanState => {\n  let newState = state;\n  const now = new Date();\n\n  switch (action.type) {\n    case 'ADD_TASK': {\n      const { columnId, content, description, priority, dueDate, tags, assignedTo, coverImage } = action.payload;\n      const taskId = uuidv4();\n      const newTask: Task = {\n        id: taskId,\n        columnId,\n        content,\n        description,\n        priority,\n        dueDate,\n        tags: tags || [],\n        assignedTo,\n        coverImage,\n        checklist: [],\n        comments: [],\n        isArchived: false,\n        createdAt: now,\n        updatedAt: now,\n      };\n\n      const column = state.columns[columnId];\n      const newTaskIds = [...column.taskIds, taskId];\n\n      newState = {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [taskId]: newTask,\n        },\n        columns: {\n          ...state.columns,\n          [columnId]: {\n            ...column,\n            taskIds: newTaskIds,\n          },\n        },\n      };\n      break;\n    }\n\n    case 'MOVE_TASK': {\n      const payload = action.payload;\n      \n      // Compatibilidade com o formato antigo e novo\n      let source, destination;\n      \n      if ('source' in payload && 'destination' in payload) {\n        // Formato antigo\n        source = payload.source;\n        destination = payload.destination;\n      } else if ('sourceColumnId' in payload && 'destinationColumnId' in payload) {\n        // Formato novo\n        source = {\n          columnId: payload.sourceColumnId,\n          index: payload.sourceIndex\n        };\n        destination = {\n          columnId: payload.destinationColumnId,\n          index: payload.destinationIndex\n        };\n      } else {\n        return state;\n      }\n      \n      // Se não houver destino, não faz nada\n      if (!destination) {\n        return state;\n      }\n\n      // Se a origem e o destino forem iguais, não faz nada\n      if (\n        source.columnId === destination.columnId &&\n        source.index === destination.index\n      ) {\n        return state;\n      }\n\n      const sourceColumn = state.columns[source.columnId];\n      const destinationColumn = state.columns[destination.columnId];\n      \n      // Verificar limite WIP, se definido\n      if (source.columnId !== destination.columnId && \n          destinationColumn.wip && \n          destinationColumn.taskIds.length >= destinationColumn.wip) {\n        alert(`Limite de tarefas em andamento (${destinationColumn.wip}) atingido para a coluna \"${destinationColumn.title}\"`);\n        return state;\n      }\n      \n      // Mover na mesma coluna\n      if (source.columnId === destination.columnId) {\n        const newTaskIds = [...sourceColumn.taskIds];\n        const [removed] = newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, removed);\n\n        newState = {\n          ...state,\n          columns: {\n            ...state.columns,\n            [source.columnId]: {\n              ...sourceColumn,\n              taskIds: newTaskIds,\n            },\n          },\n        };\n      } else {\n        // Mover entre colunas diferentes\n        const sourceTaskIds = [...sourceColumn.taskIds];\n        const [removed] = sourceTaskIds.splice(source.index, 1);\n        \n        const destinationTaskIds = [...destinationColumn.taskIds];\n        destinationTaskIds.splice(destination.index, 0, removed);\n\n        newState = {\n          ...state,\n          columns: {\n            ...state.columns,\n            [source.columnId]: {\n              ...sourceColumn,\n              taskIds: sourceTaskIds,\n            },\n            [destination.columnId]: {\n              ...destinationColumn,\n              taskIds: destinationTaskIds,\n            },\n          },\n        };\n      }\n      break;\n    }\n\n    case 'UPDATE_TASK': {\n      const { taskId, content, description, priority, dueDate, tags, assignedTo, coverImage } = action.payload;\n      \n      newState = {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [taskId]: {\n            ...state.tasks[taskId],\n            ...(content !== undefined && { content }),\n            ...(description !== undefined && { description }),\n            ...(priority !== undefined && { priority }),\n            ...(dueDate !== undefined && { dueDate }),\n            ...(tags !== undefined && { tags }),\n            ...(assignedTo !== undefined && { assignedTo }),\n            ...(coverImage !== undefined && { coverImage }),\n            updatedAt: now,\n          },\n        },\n      };\n      break;\n    }\n\n    case 'DELETE_TASK': {\n      const { taskId, columnId } = action.payload;\n      const column = state.columns[columnId];\n      const newTaskIds = column.taskIds.filter(id => id !== taskId);\n      \n      const { [taskId]: _, ...remainingTasks } = state.tasks;\n\n      newState = {\n        ...state,\n        tasks: remainingTasks,\n        columns: {\n          ...state.columns,\n          [columnId]: {\n            ...column,\n            taskIds: newTaskIds,\n          },\n        },\n      };\n      break;\n    }\n\n    case 'ADD_COLUMN': {\n      const { title, color, wip } = action.payload;\n      const newColumnId = uuidv4();\n      \n      newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [newColumnId]: {\n            id: newColumnId,\n            title,\n            taskIds: [],\n            color,\n            wip,\n          },\n        },\n        columnOrder: [...state.columnOrder, newColumnId],\n      };\n      break;\n    }\n\n    case 'UPDATE_COLUMN': {\n      const { columnId, title, color, wip } = action.payload;\n      \n      newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [columnId]: {\n            ...state.columns[columnId],\n            ...(title !== undefined && { title }),\n            ...(color !== undefined && { color }),\n            ...(wip !== undefined && { wip }),\n          },\n        },\n      };\n      break;\n    }\n\n    case 'DELETE_COLUMN': {\n      const { columnId } = action.payload;\n      const column = state.columns[columnId];\n      \n      // Remover todas as tarefas da coluna\n      const newTasks = { ...state.tasks };\n      column.taskIds.forEach(taskId => {\n        delete newTasks[taskId];\n      });\n      \n      const { [columnId]: _, ...remainingColumns } = state.columns;\n      const newColumnOrder = state.columnOrder.filter(id => id !== columnId);\n\n      newState = {\n        ...state,\n        tasks: newTasks,\n        columns: remainingColumns,\n        columnOrder: newColumnOrder,\n      };\n      break;\n    }\n\n    case 'REORDER_COLUMN': {\n      const { columnId, destinationIndex } = action.payload;\n      \n      // Encontrar a posição atual da coluna\n      const columnIndex = state.columnOrder.findIndex(id => id === columnId);\n      \n      // Se não encontrar a coluna ou o índice for o mesmo, não faz nada\n      if (columnIndex === -1 || columnIndex === destinationIndex) {\n        return state;\n      }\n      \n      // Criar uma nova ordem de colunas\n      const newColumnOrder = [...state.columnOrder];\n      \n      // Remover a coluna da posição atual\n      newColumnOrder.splice(columnIndex, 1);\n      \n      // Inserir a coluna na nova posição\n      newColumnOrder.splice(destinationIndex, 0, columnId);\n      \n      return {\n        ...state,\n        columnOrder: newColumnOrder\n      };\n    }\n\n    case 'ADD_TAG': {\n      const { taskId, tag } = action.payload;\n      const task = state.tasks[taskId];\n      const existingTags = task.tags || [];\n      \n      if (!existingTags.includes(tag)) {\n        newState = {\n          ...state,\n          tasks: {\n            ...state.tasks,\n            [taskId]: {\n              ...task,\n              tags: [...existingTags, tag],\n              updatedAt: now,\n            },\n          },\n        };\n      } else {\n        return state;\n      }\n      break;\n    }\n\n    case 'REMOVE_TAG': {\n      const { taskId, tag } = action.payload;\n      const task = state.tasks[taskId];\n      const existingTags = task.tags || [];\n      \n      newState = {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [taskId]: {\n            ...task,\n            tags: existingTags.filter(t => t !== tag),\n            updatedAt: now,\n          },\n        },\n      };\n      break;\n    }\n    \n    case 'ADD_COMMENT': {\n      const { taskId, text, author } = action.payload;\n      const task = state.tasks[taskId];\n      const existingComments = task.comments || [];\n      const newComment: Comment = {\n        id: uuidv4(),\n        text,\n        author,\n        createdAt: now,\n      };\n      \n      newState = {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [taskId]: {\n            ...task,\n            comments: [...existingComments, newComment],\n            updatedAt: now,\n          },\n        },\n      };\n      break;\n    }\n    \n    case 'DELETE_COMMENT': {\n      const { taskId, commentId } = action.payload;\n      const task = state.tasks[taskId];\n      const existingComments = task.comments || [];\n      \n      newState = {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [taskId]: {\n            ...task,\n            comments: existingComments.filter(comment => comment.id !== commentId),\n            updatedAt: now,\n          },\n        },\n      };\n      break;\n    }\n    \n    case 'ADD_CHECKLIST_ITEM': {\n      const { taskId, text } = action.payload;\n      const task = state.tasks[taskId];\n      const existingChecklist = task.checklist || [];\n      const newItem: ChecklistItem = {\n        id: uuidv4(),\n        text,\n        isComplete: false,\n      };\n      \n      newState = {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [taskId]: {\n            ...task,\n            checklist: [...existingChecklist, newItem],\n            updatedAt: now,\n          },\n        },\n      };\n      break;\n    }\n    \n    case 'TOGGLE_CHECKLIST_ITEM': {\n      const { taskId, itemId } = action.payload;\n      const task = state.tasks[taskId];\n      const existingChecklist = task.checklist || [];\n      \n      newState = {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [taskId]: {\n            ...task,\n            checklist: existingChecklist.map(item => \n              item.id === itemId ? { ...item, isComplete: !item.isComplete } : item\n            ),\n            updatedAt: now,\n          },\n        },\n      };\n      break;\n    }\n    \n    case 'DELETE_CHECKLIST_ITEM': {\n      const { taskId, itemId } = action.payload;\n      const task = state.tasks[taskId];\n      const existingChecklist = task.checklist || [];\n      \n      newState = {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [taskId]: {\n            ...task,\n            checklist: existingChecklist.filter(item => item.id !== itemId),\n            updatedAt: now,\n          },\n        },\n      };\n      break;\n    }\n    \n    case 'ARCHIVE_TASK': {\n      const { taskId } = action.payload;\n      const task = state.tasks[taskId];\n      \n      newState = {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [taskId]: {\n            ...task,\n            isArchived: true,\n            updatedAt: now,\n          },\n        },\n      };\n      break;\n    }\n    \n    case 'RESTORE_TASK': {\n      const { taskId } = action.payload;\n      const task = state.tasks[taskId];\n      \n      newState = {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [taskId]: {\n            ...task,\n            isArchived: false,\n            updatedAt: now,\n          },\n        },\n      };\n      break;\n    }\n\n    case 'IMPORT_DATA': {\n      newState = action.payload.data;\n      break;\n    }\n\n    default:\n      return state;\n  }\n\n  // Salvar no localStorage após cada ação\n  try {\n    localStorage.setItem('kanbanState', JSON.stringify(newState));\n  } catch (error) {\n    console.error('Erro ao salvar estado no localStorage:', error);\n  }\n\n  return newState;\n};\n\n// Interface do contexto\ninterface KanbanContextProps {\n  state: KanbanState;\n  dispatch: React.Dispatch<KanbanAction>;\n  exportData: () => void;\n  importData: (data: string) => void;\n}\n\n// Criação do contexto\nconst KanbanContext = createContext<KanbanContextProps | undefined>(undefined);\n\n// Provider component\ninterface KanbanProviderProps {\n  children: ReactNode;\n}\n\nexport const KanbanProvider: React.FC<KanbanProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(kanbanReducer, initialState);\n\n  const exportData = () => {\n    const dataStr = JSON.stringify(state, null, 2);\n    const dataUri = `data:application/json;charset=utf-8,${encodeURIComponent(dataStr)}`;\n    \n    // Criar um link temporário para download\n    const exportFileDefaultName = `kanban-backup-${new Date().toISOString().slice(0, 10)}.json`;\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n\n  const importData = (jsonData: string) => {\n    try {\n      const data = JSON.parse(jsonData) as KanbanState;\n      dispatch({\n        type: 'IMPORT_DATA',\n        payload: { data },\n      });\n    } catch (error) {\n      console.error('Erro ao importar dados:', error);\n      alert('Formato de arquivo inválido. Por favor, selecione um arquivo JSON válido.');\n    }\n  };\n\n  return (\n    <KanbanContext.Provider value={{ state, dispatch, exportData, importData }}>\n      {children}\n    </KanbanContext.Provider>\n  );\n};\n\n// Hook para usar o contexto\nexport const useKanban = (): KanbanContextProps => {\n  const context = useContext(KanbanContext);\n  if (!context) {\n    throw new Error('useKanban deve ser usado dentro de um KanbanProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}