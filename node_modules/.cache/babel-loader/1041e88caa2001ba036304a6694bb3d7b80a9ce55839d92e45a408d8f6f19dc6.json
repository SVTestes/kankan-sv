{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos1\\\\Documents\\\\DEV\\\\New\\\\kanban\\\\src\\\\components\\\\Column.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { Paper, Typography, Button, Box, TextField, IconButton, Badge, Tooltip, InputAdornment, Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport PaletteIcon from '@mui/icons-material/Palette';\nimport WorkIcon from '@mui/icons-material/Work';\nimport Task from './Task';\nimport { useKanban } from '../context/KanbanContext';\nimport TaskFormDialog from './TaskFormDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_COLORS = ['#0079BF',\n// Azul\n'#FF9D2A',\n// Laranja\n'#61BD4F',\n// Verde\n'#F2D600',\n// Amarelo\n'#C377E0',\n// Roxo\n'#EB5A46',\n// Vermelho\n'#00C2E0',\n// Azul claro\n'#51E898',\n// Verde claro\n'#FF78CB',\n// Rosa\n'#344563' // Azul escuro\n];\nconst Column = ({\n  column,\n  tasks\n}) => {\n  _s();\n  const {\n    dispatch\n  } = useKanban();\n  const [isAddingTask, setIsAddingTask] = useState(false);\n  const [isEditingColumn, setIsEditingColumn] = useState(false);\n  const [columnTitle, setColumnTitle] = useState(column.title);\n  const [columnColor, setColumnColor] = useState(column.color || DEFAULT_COLORS[0]);\n  const [columnWip, setColumnWip] = useState(column.wip);\n  const [newTaskContent, setNewTaskContent] = useState('');\n  const [taskFormOpen, setTaskFormOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [colorPickerOpen, setColorPickerOpen] = useState(false);\n  const [settingsAnchorEl, setSettingsAnchorEl] = useState(null);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [wipDialogOpen, setWipDialogOpen] = useState(false);\n  const [wipValue, setWipValue] = useState((columnWip === null || columnWip === void 0 ? void 0 : columnWip.toString()) || '');\n  const handleOpenSettings = event => {\n    setSettingsAnchorEl(event.currentTarget);\n    setSettingsOpen(true);\n  };\n  const handleCloseSettings = () => {\n    setSettingsAnchorEl(null);\n    setSettingsOpen(false);\n  };\n  const handleAddTask = () => {\n    if (newTaskContent.trim()) {\n      dispatch({\n        type: 'ADD_TASK',\n        payload: {\n          columnId: column.id,\n          content: newTaskContent\n        }\n      });\n      setNewTaskContent('');\n      setIsAddingTask(false);\n    }\n  };\n  const handleColumnUpdate = () => {\n    if (columnTitle.trim()) {\n      dispatch({\n        type: 'UPDATE_COLUMN',\n        payload: {\n          columnId: column.id,\n          title: columnTitle,\n          color: columnColor,\n          wip: columnWip\n        }\n      });\n      setIsEditingColumn(false);\n    }\n  };\n  const handleDeleteColumn = () => {\n    if (window.confirm(`Tem certeza que deseja excluir a coluna \"${column.title}\"?`)) {\n      dispatch({\n        type: 'DELETE_COLUMN',\n        payload: {\n          columnId: column.id\n        }\n      });\n    }\n  };\n  const handleOpenTaskForm = () => {\n    setCurrentTask(null);\n    setTaskFormOpen(true);\n  };\n  const handleEditTask = task => {\n    setCurrentTask(task);\n    setTaskFormOpen(true);\n  };\n  const handleCloseTaskForm = () => {\n    setTaskFormOpen(false);\n  };\n  const handleColorSelect = color => {\n    setColumnColor(color);\n    setColorPickerOpen(false);\n    dispatch({\n      type: 'UPDATE_COLUMN',\n      payload: {\n        columnId: column.id,\n        color\n      }\n    });\n  };\n  const handleWipDialogOpen = () => {\n    setWipValue((columnWip === null || columnWip === void 0 ? void 0 : columnWip.toString()) || '');\n    setWipDialogOpen(true);\n    handleCloseSettings();\n  };\n  const handleWipDialogClose = () => {\n    setWipDialogOpen(false);\n  };\n  const handleWipSave = () => {\n    const newWip = wipValue === '' ? undefined : parseInt(wipValue, 10);\n    if (wipValue === '' || newWip !== undefined && !isNaN(newWip) && newWip >= 0) {\n      setColumnWip(newWip);\n      dispatch({\n        type: 'UPDATE_COLUMN',\n        payload: {\n          columnId: column.id,\n          wip: newWip\n        }\n      });\n      setWipDialogOpen(false);\n    }\n  };\n\n  // Verificar se o limite WIP estÃ¡ sendo atingido\n  const isWipExceeded = columnWip !== undefined && tasks.length > columnWip;\n  const isWipWarning = columnWip !== undefined && tasks.length === columnWip;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      minWidth: 280,\n      maxWidth: 350,\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: '#f5f5f5',\n      pb: 2,\n      borderRadius: '3px',\n      boxShadow: '0 1px 3px rgba(0,0,0,0.12)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      p: 1.5,\n      pb: 1,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      sx: {\n        bgcolor: columnColor,\n        color: 'white',\n        borderRadius: '3px 3px 0 0',\n        boxShadow: '0 1px 2px rgba(0,0,0,0.1)'\n      },\n      children: [isEditingColumn ? /*#__PURE__*/_jsxDEV(TextField, {\n        value: columnTitle,\n        onChange: e => setColumnTitle(e.target.value),\n        variant: \"outlined\",\n        size: \"small\",\n        autoFocus: true,\n        fullWidth: true,\n        InputProps: {\n          sx: {\n            color: 'white',\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'rgba(255,255,255,0.5)'\n            },\n            '&:hover .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'rgba(255,255,255,0.8)'\n            },\n            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'white'\n            }\n          }\n        },\n        onBlur: handleColumnUpdate,\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            handleColumnUpdate();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          fontWeight: \"600\",\n          sx: {\n            mr: 1\n          },\n          children: column.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), columnWip !== undefined && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: `Limite WIP: ${tasks.length}/${columnWip}`,\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: `${tasks.length}/${columnWip}`,\n            color: isWipExceeded ? \"error\" : isWipWarning ? \"warning\" : \"primary\",\n            sx: {\n              '& .MuiBadge-badge': {\n                fontSize: '0.65rem'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(WorkIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: handleOpenSettings,\n          sx: {\n            color: 'white'\n          },\n          \"aria-label\": \"Configura\\xE7\\xF5es da coluna\",\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          anchorEl: settingsAnchorEl,\n          open: settingsOpen,\n          onClose: handleCloseSettings,\n          MenuListProps: {\n            'aria-labelledby': 'column-settings'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              setIsEditingColumn(true);\n              handleCloseSettings();\n            },\n            children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n              fontSize: \"small\",\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), \"Editar t\\xEDtulo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => {\n              setColorPickerOpen(true);\n              handleCloseSettings();\n            },\n            children: [/*#__PURE__*/_jsxDEV(PaletteIcon, {\n              fontSize: \"small\",\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), \"Mudar cor\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleWipDialogOpen,\n            children: [/*#__PURE__*/_jsxDEV(WorkIcon, {\n              fontSize: \"small\",\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), columnWip ? `Limite WIP (${columnWip})` : 'Definir limite WIP']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleDeleteColumn,\n            sx: {\n              color: 'error.main'\n            },\n            children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n              fontSize: \"small\",\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), \"Excluir coluna\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: colorPickerOpen,\n      onClose: () => setColorPickerOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Escolha uma cor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          gap: 1,\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          sx: {\n            p: 1,\n            maxWidth: 300\n          },\n          children: DEFAULT_COLORS.map(color => /*#__PURE__*/_jsxDEV(Box, {\n            onClick: () => handleColorSelect(color),\n            sx: {\n              width: 36,\n              height: 36,\n              bgcolor: color,\n              borderRadius: '4px',\n              cursor: 'pointer',\n              border: color === columnColor ? '2px solid #000' : '2px solid transparent',\n              '&:hover': {\n                opacity: 0.8,\n                transform: 'scale(1.1)'\n              },\n              transition: 'all 0.2s ease'\n            }\n          }, color, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: wipDialogOpen,\n      onClose: handleWipDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Definir limite de tarefas em andamento (WIP)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          pt: 1,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Limite WIP\",\n            type: \"number\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              },\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(WorkIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)\n            },\n            helperText: \"Deixe em branco para remover o limite\",\n            value: wipValue,\n            onChange: e => setWipValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleWipDialogClose,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleWipSave,\n          variant: \"contained\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: column.id,\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Box, {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        sx: {\n          flex: 1,\n          minHeight: 100,\n          p: 1,\n          pt: 1.5,\n          overflow: 'auto',\n          backgroundColor: snapshot.isDraggingOver ? 'rgba(0, 121, 191, 0.1)' // Azul claro ao arrastar\n          : '#f5f5f5',\n          transition: 'background-color 0.2s ease'\n        },\n        children: [tasks.length === 0 && !snapshot.isDraggingOver && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            textAlign: 'center',\n            color: 'text.secondary',\n            fontSize: '0.875rem',\n            fontStyle: 'italic',\n            backgroundColor: 'rgba(0,0,0,0.03)',\n            borderRadius: 1\n          },\n          children: \"Arraste tarefas para aqui ou adicione uma nova\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          index: index,\n          columnId: column.id,\n          onEdit: handleEditTask\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), isAddingTask ? /*#__PURE__*/_jsxDEV(Box, {\n      p: 1.5,\n      pt: 0.5,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        size: \"small\",\n        placeholder: \"Digite o t\\xEDtulo da tarefa\",\n        value: newTaskContent,\n        onChange: e => setNewTaskContent(e.target.value),\n        autoFocus: true,\n        onBlur: () => {\n          if (!newTaskContent.trim()) {\n            setIsAddingTask(false);\n          }\n        },\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            handleAddTask();\n          }\n        },\n        sx: {\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          onClick: handleAddTask,\n          disabled: !newTaskContent.trim(),\n          children: \"Adicionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"small\",\n          onClick: () => setIsAddingTask(false),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      p: 1.5,\n      pt: 0.5,\n      display: \"flex\",\n      gap: 1,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 24\n        }, this),\n        onClick: () => setIsAddingTask(true),\n        fullWidth: true,\n        size: \"small\",\n        color: isWipExceeded ? \"error\" : \"primary\",\n        disabled: isWipExceeded,\n        children: isWipExceeded ? `Limite WIP (${columnWip}) atingido` : \"Adicionar Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleOpenTaskForm,\n        fullWidth: true,\n        size: \"small\",\n        color: isWipExceeded ? \"error\" : \"primary\",\n        disabled: isWipExceeded,\n        children: \"Detalhada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TaskFormDialog, {\n      open: taskFormOpen,\n      onClose: handleCloseTaskForm,\n      task: currentTask,\n      columnId: column.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(Column, \"l0jYyQ5jTP3M827BxvGhe2kbwc4=\", false, function () {\n  return [useKanban];\n});\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","useState","Droppable","Paper","Typography","Button","Box","TextField","IconButton","Badge","Tooltip","InputAdornment","Menu","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","AddIcon","EditIcon","DeleteIcon","MoreVertIcon","PaletteIcon","WorkIcon","Task","useKanban","TaskFormDialog","jsxDEV","_jsxDEV","DEFAULT_COLORS","Column","column","tasks","_s","dispatch","isAddingTask","setIsAddingTask","isEditingColumn","setIsEditingColumn","columnTitle","setColumnTitle","title","columnColor","setColumnColor","color","columnWip","setColumnWip","wip","newTaskContent","setNewTaskContent","taskFormOpen","setTaskFormOpen","currentTask","setCurrentTask","colorPickerOpen","setColorPickerOpen","settingsAnchorEl","setSettingsAnchorEl","settingsOpen","setSettingsOpen","wipDialogOpen","setWipDialogOpen","wipValue","setWipValue","toString","handleOpenSettings","event","currentTarget","handleCloseSettings","handleAddTask","trim","type","payload","columnId","id","content","handleColumnUpdate","handleDeleteColumn","window","confirm","handleOpenTaskForm","handleEditTask","task","handleCloseTaskForm","handleColorSelect","handleWipDialogOpen","handleWipDialogClose","handleWipSave","newWip","undefined","parseInt","isNaN","isWipExceeded","length","isWipWarning","sx","minWidth","maxWidth","height","display","flexDirection","backgroundColor","pb","borderRadius","boxShadow","children","p","justifyContent","alignItems","bgcolor","value","onChange","e","target","variant","size","autoFocus","fullWidth","InputProps","borderColor","onBlur","onKeyPress","key","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","mr","badgeContent","fontSize","onClick","anchorEl","open","onClose","MenuListProps","gap","flexWrap","map","width","cursor","border","opacity","transform","transition","pt","label","inputProps","min","startAdornment","position","helperText","droppableId","provided","snapshot","ref","innerRef","droppableProps","flex","minHeight","overflow","isDraggingOver","textAlign","fontStyle","index","onEdit","placeholder","mb","disabled","startIcon","_c","$RefreshReg$"],"sources":["C:/Users/Carlos1/Documents/DEV/New/kanban/src/components/Column.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport { Paper, Typography, Button, Box, TextField, IconButton, Badge, Tooltip, InputAdornment, Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport PaletteIcon from '@mui/icons-material/Palette';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport Task from './Task';\r\nimport { Column as ColumnType, Task as TaskType } from '../types/types';\r\nimport { useKanban } from '../context/KanbanContext';\r\nimport TaskFormDialog from './TaskFormDialog';\r\n\r\ninterface ColumnProps {\r\n  column: ColumnType;\r\n  tasks: TaskType[];\r\n}\r\n\r\nconst DEFAULT_COLORS = [\r\n  '#0079BF', // Azul\r\n  '#FF9D2A', // Laranja\r\n  '#61BD4F', // Verde\r\n  '#F2D600', // Amarelo\r\n  '#C377E0', // Roxo\r\n  '#EB5A46', // Vermelho\r\n  '#00C2E0', // Azul claro\r\n  '#51E898', // Verde claro\r\n  '#FF78CB', // Rosa\r\n  '#344563', // Azul escuro\r\n];\r\n\r\nconst Column: React.FC<ColumnProps> = ({ column, tasks }) => {\r\n  const { dispatch } = useKanban();\r\n  const [isAddingTask, setIsAddingTask] = useState(false);\r\n  const [isEditingColumn, setIsEditingColumn] = useState(false);\r\n  const [columnTitle, setColumnTitle] = useState(column.title);\r\n  const [columnColor, setColumnColor] = useState(column.color || DEFAULT_COLORS[0]);\r\n  const [columnWip, setColumnWip] = useState<number | undefined>(column.wip);\r\n  const [newTaskContent, setNewTaskContent] = useState('');\r\n  const [taskFormOpen, setTaskFormOpen] = useState(false);\r\n  const [currentTask, setCurrentTask] = useState<TaskType | null>(null);\r\n  const [colorPickerOpen, setColorPickerOpen] = useState(false);\r\n  const [settingsAnchorEl, setSettingsAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n  const [wipDialogOpen, setWipDialogOpen] = useState(false);\r\n  const [wipValue, setWipValue] = useState<string>(columnWip?.toString() || '');\r\n\r\n  const handleOpenSettings = (event: React.MouseEvent<HTMLElement>) => {\r\n    setSettingsAnchorEl(event.currentTarget);\r\n    setSettingsOpen(true);\r\n  };\r\n\r\n  const handleCloseSettings = () => {\r\n    setSettingsAnchorEl(null);\r\n    setSettingsOpen(false);\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    if (newTaskContent.trim()) {\r\n      dispatch({\r\n        type: 'ADD_TASK',\r\n        payload: {\r\n          columnId: column.id,\r\n          content: newTaskContent,\r\n        },\r\n      });\r\n      setNewTaskContent('');\r\n      setIsAddingTask(false);\r\n    }\r\n  };\r\n\r\n  const handleColumnUpdate = () => {\r\n    if (columnTitle.trim()) {\r\n      dispatch({\r\n        type: 'UPDATE_COLUMN',\r\n        payload: {\r\n          columnId: column.id,\r\n          title: columnTitle,\r\n          color: columnColor,\r\n          wip: columnWip,\r\n        },\r\n      });\r\n      setIsEditingColumn(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteColumn = () => {\r\n    if (window.confirm(`Tem certeza que deseja excluir a coluna \"${column.title}\"?`)) {\r\n      dispatch({\r\n        type: 'DELETE_COLUMN',\r\n        payload: {\r\n          columnId: column.id,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOpenTaskForm = () => {\r\n    setCurrentTask(null);\r\n    setTaskFormOpen(true);\r\n  };\r\n\r\n  const handleEditTask = (task: TaskType) => {\r\n    setCurrentTask(task);\r\n    setTaskFormOpen(true);\r\n  };\r\n\r\n  const handleCloseTaskForm = () => {\r\n    setTaskFormOpen(false);\r\n  };\r\n\r\n  const handleColorSelect = (color: string) => {\r\n    setColumnColor(color);\r\n    setColorPickerOpen(false);\r\n    \r\n    dispatch({\r\n      type: 'UPDATE_COLUMN',\r\n      payload: {\r\n        columnId: column.id,\r\n        color,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleWipDialogOpen = () => {\r\n    setWipValue(columnWip?.toString() || '');\r\n    setWipDialogOpen(true);\r\n    handleCloseSettings();\r\n  };\r\n\r\n  const handleWipDialogClose = () => {\r\n    setWipDialogOpen(false);\r\n  };\r\n\r\n  const handleWipSave = () => {\r\n    const newWip = wipValue === '' ? undefined : parseInt(wipValue, 10);\r\n    \r\n    if (wipValue === '' || (newWip !== undefined && !isNaN(newWip) && newWip >= 0)) {\r\n      setColumnWip(newWip);\r\n      \r\n      dispatch({\r\n        type: 'UPDATE_COLUMN',\r\n        payload: {\r\n          columnId: column.id,\r\n          wip: newWip,\r\n        },\r\n      });\r\n      \r\n      setWipDialogOpen(false);\r\n    }\r\n  };\r\n\r\n  // Verificar se o limite WIP estÃ¡ sendo atingido\r\n  const isWipExceeded = columnWip !== undefined && tasks.length > columnWip;\r\n  const isWipWarning = columnWip !== undefined && tasks.length === columnWip;\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        minWidth: 280,\r\n        maxWidth: 350,\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#f5f5f5',\r\n        pb: 2,\r\n        borderRadius: '3px',\r\n        boxShadow: '0 1px 3px rgba(0,0,0,0.12)',\r\n      }}\r\n    >\r\n      <Box\r\n        p={1.5}\r\n        pb={1}\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        sx={{\r\n          bgcolor: columnColor,\r\n          color: 'white',\r\n          borderRadius: '3px 3px 0 0',\r\n          boxShadow: '0 1px 2px rgba(0,0,0,0.1)',\r\n        }}\r\n      >\r\n        {isEditingColumn ? (\r\n          <TextField\r\n            value={columnTitle}\r\n            onChange={(e) => setColumnTitle(e.target.value)}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            autoFocus\r\n            fullWidth\r\n            InputProps={{\r\n              sx: { \r\n                color: 'white', \r\n                '& .MuiOutlinedInput-notchedOutline': { \r\n                  borderColor: 'rgba(255,255,255,0.5)' \r\n                },\r\n                '&:hover .MuiOutlinedInput-notchedOutline': { \r\n                  borderColor: 'rgba(255,255,255,0.8)' \r\n                },\r\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': { \r\n                  borderColor: 'white' \r\n                }\r\n              }\r\n            }}\r\n            onBlur={handleColumnUpdate}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') {\r\n                handleColumnUpdate();\r\n              }\r\n            }}\r\n          />\r\n        ) : (\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Typography variant=\"subtitle1\" fontWeight=\"600\" sx={{ mr: 1 }}>\r\n              {column.title}\r\n            </Typography>\r\n            \r\n            {columnWip !== undefined && (\r\n              <Tooltip title={`Limite WIP: ${tasks.length}/${columnWip}`}>\r\n                <Badge \r\n                  badgeContent={`${tasks.length}/${columnWip}`} \r\n                  color={isWipExceeded ? \"error\" : isWipWarning ? \"warning\" : \"primary\"}\r\n                  sx={{ '& .MuiBadge-badge': { fontSize: '0.65rem' } }}\r\n                >\r\n                  <WorkIcon fontSize=\"small\" />\r\n                </Badge>\r\n              </Tooltip>\r\n            )}\r\n          </Box>\r\n        )}\r\n        <Box>\r\n          <IconButton \r\n            size=\"small\" \r\n            onClick={handleOpenSettings} \r\n            sx={{ color: 'white' }}\r\n            aria-label=\"ConfiguraÃ§Ãµes da coluna\"\r\n          >\r\n            <MoreVertIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          \r\n          <Menu\r\n            anchorEl={settingsAnchorEl}\r\n            open={settingsOpen}\r\n            onClose={handleCloseSettings}\r\n            MenuListProps={{\r\n              'aria-labelledby': 'column-settings',\r\n            }}\r\n          >\r\n            <MenuItem onClick={() => { setIsEditingColumn(true); handleCloseSettings(); }}>\r\n              <EditIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n              Editar tÃ­tulo\r\n            </MenuItem>\r\n            <MenuItem onClick={() => { setColorPickerOpen(true); handleCloseSettings(); }}>\r\n              <PaletteIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n              Mudar cor\r\n            </MenuItem>\r\n            <MenuItem onClick={handleWipDialogOpen}>\r\n              <WorkIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n              {columnWip ? `Limite WIP (${columnWip})` : 'Definir limite WIP'}\r\n            </MenuItem>\r\n            <MenuItem onClick={handleDeleteColumn} sx={{ color: 'error.main' }}>\r\n              <DeleteIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n              Excluir coluna\r\n            </MenuItem>\r\n          </Menu>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Dialog open={colorPickerOpen} onClose={() => setColorPickerOpen(false)}>\r\n        <DialogTitle>Escolha uma cor</DialogTitle>\r\n        <DialogContent>\r\n          <Box \r\n            display=\"flex\" \r\n            gap={1} \r\n            flexWrap=\"wrap\"\r\n            justifyContent=\"center\"\r\n            sx={{ p: 1, maxWidth: 300 }}\r\n          >\r\n            {DEFAULT_COLORS.map((color) => (\r\n              <Box\r\n                key={color}\r\n                onClick={() => handleColorSelect(color)}\r\n                sx={{\r\n                  width: 36,\r\n                  height: 36,\r\n                  bgcolor: color,\r\n                  borderRadius: '4px',\r\n                  cursor: 'pointer',\r\n                  border: color === columnColor ? '2px solid #000' : '2px solid transparent',\r\n                  '&:hover': {\r\n                    opacity: 0.8,\r\n                    transform: 'scale(1.1)',\r\n                  },\r\n                  transition: 'all 0.2s ease',\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Dialog open={wipDialogOpen} onClose={handleWipDialogClose}>\r\n        <DialogTitle>Definir limite de tarefas em andamento (WIP)</DialogTitle>\r\n        <DialogContent>\r\n          <Box pt={1}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Limite WIP\"\r\n              type=\"number\"\r\n              InputProps={{\r\n                inputProps: { min: 0 },\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <WorkIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              helperText=\"Deixe em branco para remover o limite\"\r\n              value={wipValue}\r\n              onChange={(e) => setWipValue(e.target.value)}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleWipDialogClose}>Cancelar</Button>\r\n          <Button onClick={handleWipSave} variant=\"contained\">Salvar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Droppable droppableId={column.id}>\r\n        {(provided, snapshot) => (\r\n          <Box\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            sx={{\r\n              flex: 1,\r\n              minHeight: 100,\r\n              p: 1,\r\n              pt: 1.5,\r\n              overflow: 'auto',\r\n              backgroundColor: snapshot.isDraggingOver \r\n                ? 'rgba(0, 121, 191, 0.1)'  // Azul claro ao arrastar\r\n                : '#f5f5f5',\r\n              transition: 'background-color 0.2s ease',\r\n            }}\r\n          >\r\n            {tasks.length === 0 && !snapshot.isDraggingOver && (\r\n              <Box \r\n                sx={{ \r\n                  p: 2, \r\n                  textAlign: 'center', \r\n                  color: 'text.secondary',\r\n                  fontSize: '0.875rem',\r\n                  fontStyle: 'italic',\r\n                  backgroundColor: 'rgba(0,0,0,0.03)',\r\n                  borderRadius: 1,\r\n                }}\r\n              >\r\n                Arraste tarefas para aqui ou adicione uma nova\r\n              </Box>\r\n            )}\r\n            \r\n            {tasks.map((task, index) => (\r\n              <Task\r\n                key={task.id}\r\n                task={task}\r\n                index={index}\r\n                columnId={column.id}\r\n                onEdit={handleEditTask}\r\n              />\r\n            ))}\r\n            {provided.placeholder}\r\n          </Box>\r\n        )}\r\n      </Droppable>\r\n\r\n      {isAddingTask ? (\r\n        <Box p={1.5} pt={0.5}>\r\n          <TextField\r\n            fullWidth\r\n            size=\"small\"\r\n            placeholder=\"Digite o tÃ­tulo da tarefa\"\r\n            value={newTaskContent}\r\n            onChange={(e) => setNewTaskContent(e.target.value)}\r\n            autoFocus\r\n            onBlur={() => {\r\n              if (!newTaskContent.trim()) {\r\n                setIsAddingTask(false);\r\n              }\r\n            }}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') {\r\n                handleAddTask();\r\n              }\r\n            }}\r\n            sx={{ mb: 1 }}\r\n          />\r\n          <Box display=\"flex\" gap={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              onClick={handleAddTask}\r\n              disabled={!newTaskContent.trim()}\r\n            >\r\n              Adicionar\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onClick={() => setIsAddingTask(false)}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Box p={1.5} pt={0.5} display=\"flex\" gap={1}>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => setIsAddingTask(true)}\r\n            fullWidth\r\n            size=\"small\"\r\n            color={isWipExceeded ? \"error\" : \"primary\"}\r\n            disabled={isWipExceeded}\r\n          >\r\n            {isWipExceeded \r\n              ? `Limite WIP (${columnWip}) atingido` \r\n              : \"Adicionar Tarefa\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={handleOpenTaskForm}\r\n            fullWidth\r\n            size=\"small\"\r\n            color={isWipExceeded ? \"error\" : \"primary\"}\r\n            disabled={isWipExceeded}\r\n          >\r\n            Detalhada\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      \r\n      <TaskFormDialog\r\n        open={taskFormOpen}\r\n        onClose={handleCloseTaskForm}\r\n        task={currentTask}\r\n        columnId={column.id}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Column; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}