{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos1\\\\Documents\\\\DEV\\\\New\\\\kanban\\\\src\\\\components\\\\TaskFormDialog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button, FormControl, InputLabel, Select, MenuItem, Box, Chip, Stack, Autocomplete, Tabs, Tab, Typography, List, ListItem, ListItemText, ListItemIcon, Checkbox, IconButton, Divider, Paper, Avatar, InputAdornment } from '@mui/material';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport ChecklistIcon from '@mui/icons-material/Checklist';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport ImageIcon from '@mui/icons-material/Image';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { useKanban } from '../context/KanbanContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TabPanel({\n  children,\n  value,\n  index,\n  ...other\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `task-tabpanel-${index}`,\n    \"aria-labelledby\": `task-tab-${index}`,\n    ...other,\n    style: {\n      padding: '16px 0'\n    },\n    children: value === index && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nconst TaskFormDialog = ({\n  open,\n  onClose,\n  task,\n  columnId\n}) => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useKanban();\n  const [tabValue, setTabValue] = useState(0);\n  const [content, setContent] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('');\n  const [dueDate, setDueDate] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [newTag, setNewTag] = useState('');\n  const [coverImage, setCoverImage] = useState('');\n  const [assignedTo, setAssignedTo] = useState('');\n\n  // Lista de verificação\n  const [checklist, setChecklist] = useState([]);\n  const [newChecklistItem, setNewChecklistItem] = useState('');\n\n  // Comentários\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [commentAuthor, setCommentAuthor] = useState('Usuário');\n\n  // Coletar todas as tags existentes para sugestões\n  const allTags = Array.from(new Set(Object.values(state.tasks).flatMap(task => task.tags || []))).sort();\n  useEffect(() => {\n    if (task) {\n      setContent(task.content);\n      setDescription(task.description || '');\n      setPriority(task.priority || '');\n      setDueDate(task.dueDate ? new Date(task.dueDate) : null);\n      setTags(task.tags || []);\n      setCoverImage(task.coverImage || '');\n      setAssignedTo(task.assignedTo || '');\n      setChecklist(task.checklist || []);\n      setComments(task.comments || []);\n      setTabValue(0); // Reset para a primeira aba ao abrir\n    } else {\n      setContent('');\n      setDescription('');\n      setPriority('');\n      setDueDate(null);\n      setTags([]);\n      setCoverImage('');\n      setAssignedTo('');\n      setChecklist([]);\n      setComments([]);\n      setTabValue(0);\n    }\n  }, [task, open]);\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const handleAddTag = () => {\n    if (newTag.trim() && !tags.includes(newTag.trim())) {\n      setTags([...tags, newTag.trim()]);\n      setNewTag('');\n    }\n  };\n  const handleDeleteTag = tagToDelete => {\n    setTags(tags.filter(tag => tag !== tagToDelete));\n  };\n  const handleAddChecklistItem = () => {\n    if (newChecklistItem.trim()) {\n      const newItem = {\n        id: Math.random().toString(36).substring(2, 9),\n        // ID simples para o formulário\n        text: newChecklistItem.trim(),\n        isComplete: false\n      };\n      setChecklist([...checklist, newItem]);\n      setNewChecklistItem('');\n    }\n  };\n  const handleToggleChecklistItem = itemId => {\n    setChecklist(checklist.map(item => item.id === itemId ? {\n      ...item,\n      isComplete: !item.isComplete\n    } : item));\n  };\n  const handleDeleteChecklistItem = itemId => {\n    setChecklist(checklist.filter(item => item.id !== itemId));\n  };\n  const handleAddComment = () => {\n    if (newComment.trim()) {\n      const newCommentObj = {\n        id: Math.random().toString(36).substring(2, 9),\n        text: newComment.trim(),\n        author: commentAuthor,\n        createdAt: new Date()\n      };\n      setComments([...comments, newCommentObj]);\n      setNewComment('');\n    }\n  };\n  const handleDeleteComment = commentId => {\n    setComments(comments.filter(comment => comment.id !== commentId));\n  };\n  const handleSubmit = () => {\n    if (content.trim()) {\n      if (task) {\n        // Editar tarefa existente\n        dispatch({\n          type: 'UPDATE_TASK',\n          payload: {\n            taskId: task.id,\n            content,\n            description: description || undefined,\n            priority: priority || undefined,\n            dueDate: dueDate || undefined,\n            tags,\n            coverImage: coverImage || undefined,\n            assignedTo: assignedTo || undefined\n          }\n        });\n\n        // Atualizar itens da lista de verificação\n        // Primeiro remover todos os itens antigos e depois adicionar os novos\n        if (task.checklist) {\n          task.checklist.forEach(item => {\n            dispatch({\n              type: 'DELETE_CHECKLIST_ITEM',\n              payload: {\n                taskId: task.id,\n                itemId: item.id\n              }\n            });\n          });\n        }\n        checklist.forEach(item => {\n          dispatch({\n            type: 'ADD_CHECKLIST_ITEM',\n            payload: {\n              taskId: task.id,\n              text: item.text\n            }\n          });\n          if (item.isComplete) {\n            dispatch({\n              type: 'TOGGLE_CHECKLIST_ITEM',\n              payload: {\n                taskId: task.id,\n                itemId: item.id\n              }\n            });\n          }\n        });\n\n        // Atualizar comentários\n        // Como os comentários são registros históricos, eles não são substituídos\n        // Aqui apenas adicionamos novos comentários que foram criados no formulário\n        const existingCommentIds = (task.comments || []).map(c => c.id);\n        comments.filter(c => !existingCommentIds.includes(c.id)).forEach(comment => {\n          dispatch({\n            type: 'ADD_COMMENT',\n            payload: {\n              taskId: task.id,\n              text: comment.text,\n              author: comment.author\n            }\n          });\n        });\n      } else {\n        // Adicionar nova tarefa\n        const addTaskAction = {\n          type: 'ADD_TASK',\n          payload: {\n            columnId,\n            content,\n            description: description || undefined,\n            priority: priority || undefined,\n            dueDate: dueDate || undefined,\n            tags,\n            coverImage: coverImage || undefined,\n            assignedTo: assignedTo || undefined\n          }\n        };\n        dispatch(addTaskAction);\n\n        // Como é uma nova tarefa, precisamos buscar o ID que foi gerado\n        // Isso seria melhor se o action retornasse o ID gerado, mas vamos usar este workaround\n        // Na prática, você poderia adaptar o context para retornar o ID da tarefa criada\n        setTimeout(() => {\n          // Encontrar a tarefa recém-criada (a última da coluna)\n          const column = state.columns[columnId];\n          if (column && column.taskIds.length > 0) {\n            const newTaskId = column.taskIds[column.taskIds.length - 1];\n\n            // Adicionar itens da lista de verificação\n            checklist.forEach(item => {\n              dispatch({\n                type: 'ADD_CHECKLIST_ITEM',\n                payload: {\n                  taskId: newTaskId,\n                  text: item.text\n                }\n              });\n              if (item.isComplete) {\n                dispatch({\n                  type: 'TOGGLE_CHECKLIST_ITEM',\n                  payload: {\n                    taskId: newTaskId,\n                    itemId: item.id\n                  }\n                });\n              }\n            });\n\n            // Adicionar comentários\n            comments.forEach(comment => {\n              dispatch({\n                type: 'ADD_COMMENT',\n                payload: {\n                  taskId: newTaskId,\n                  text: comment.text,\n                  author: comment.author\n                }\n              });\n            });\n          }\n        }, 100);\n      }\n      onClose();\n    }\n  };\n\n  // Estatísticas da lista de verificação\n  const checklistStats = {\n    total: checklist.length,\n    completed: checklist.filter(item => item.isComplete).length,\n    percent: checklist.length > 0 ? Math.round(checklist.filter(item => item.isComplete).length / checklist.length * 100) : 0\n  };\n  const formatDate = date => {\n    return new Date(date).toLocaleString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    sx: {\n      '& .MuiDialog-paper': {\n        maxHeight: '90vh'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        pb: 1\n      },\n      children: task ? 'Editar Tarefa' : 'Nova Tarefa'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      sx: {\n        px: 3,\n        pb: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider',\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabChange,\n          \"aria-label\": \"task tabs\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 24\n            }, this),\n            iconPosition: \"start\",\n            label: \"Detalhes\",\n            id: \"task-tab-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(ChecklistIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 24\n            }, this),\n            iconPosition: \"start\",\n            label: \"Lista de Verifica\\xE7\\xE3o\",\n            id: \"task-tab-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 24\n            }, this),\n            iconPosition: \"start\",\n            label: \"Coment\\xE1rios\",\n            id: \"task-tab-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2,\n            pt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"T\\xEDtulo\",\n            value: content,\n            onChange: e => setContent(e.target.value),\n            fullWidth: true,\n            required: true,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Descri\\xE7\\xE3o\",\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            fullWidth: true,\n            multiline: true,\n            rows: 3,\n            placeholder: \"Adicione uma descri\\xE7\\xE3o detalhada para esta tarefa...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 2,\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                minWidth: 200,\n                flexGrow: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"priority-label\",\n                children: \"Prioridade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"priority-label\",\n                value: priority,\n                label: \"Prioridade\",\n                onChange: e => setPriority(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Nenhuma\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"baixa\",\n                  children: \"Baixa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"m\\xE9dia\",\n                  children: \"M\\xE9dia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"alta\",\n                  children: \"Alta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDateFns,\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Data de vencimento\",\n                value: dueDate,\n                onChange: newValue => setDueDate(newValue),\n                slotProps: {\n                  textField: {\n                    fullWidth: true,\n                    sx: {\n                      minWidth: 200,\n                      flexGrow: 1\n                    }\n                  }\n                },\n                format: \"dd/MM/yyyy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Atribu\\xEDdo a\",\n            value: assignedTo,\n            onChange: e => setAssignedTo(e.target.value),\n            fullWidth: true,\n            placeholder: \"Digite o nome da pessoa respons\\xE1vel\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"URL da imagem de capa\",\n            value: coverImage,\n            onChange: e => setCoverImage(e.target.value),\n            fullWidth: true,\n            placeholder: \"Cole a URL de uma imagem para usar como capa\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n              value: newTag,\n              onChange: (event, newValue) => {\n                setNewTag(newValue || '');\n              },\n              inputValue: newTag,\n              onInputChange: (event, newInputValue) => {\n                setNewTag(newInputValue);\n              },\n              options: allTags.filter(tag => !tags.includes(tag)),\n              freeSolo: true,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Adicionar etiqueta\",\n                fullWidth: true,\n                onKeyPress: e => {\n                  if (e.key === 'Enter') {\n                    e.preventDefault();\n                    handleAddTag();\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleAddTag,\n              variant: \"outlined\",\n              size: \"small\",\n              sx: {\n                mt: 1,\n                mb: 2\n              },\n              disabled: !newTag.trim() || tags.includes(newTag.trim()),\n              children: \"Adicionar Etiqueta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 1,\n              flexWrap: \"wrap\",\n              useFlexGap: true,\n              children: tags.map(tag => /*#__PURE__*/_jsxDEV(Chip, {\n                label: tag,\n                onDelete: () => handleDeleteTag(tag),\n                color: \"primary\",\n                variant: \"outlined\",\n                size: \"small\",\n                sx: {\n                  mb: 1\n                }\n              }, tag, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 1,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              children: \"Lista de Verifica\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this), checklist.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [checklistStats.completed, \"/\", checklistStats.total, \" conclu\\xEDdos (\", checklistStats.percent, \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            gap: 1,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              size: \"small\",\n              placeholder: \"Adicionar um item\",\n              value: newChecklistItem,\n              onChange: e => setNewChecklistItem(e.target.value),\n              onKeyPress: e => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  handleAddChecklistItem();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleAddChecklistItem,\n              disabled: !newChecklistItem.trim(),\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 28\n              }, this),\n              children: \"Adicionar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this), checklist.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              width: '100%',\n              bgcolor: 'background.paper'\n            },\n            children: checklist.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n              secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => handleDeleteChecklistItem(item.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 23\n              }, this),\n              disablePadding: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  edge: \"start\",\n                  checked: item.isComplete,\n                  onChange: () => handleToggleChecklistItem(item.id),\n                  disableRipple: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item.text,\n                sx: {\n                  textDecoration: item.isComplete ? 'line-through' : 'none',\n                  color: item.isComplete ? 'text.secondary' : 'text.primary'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              py: 2\n            },\n            children: \"Nenhum item na lista de verifica\\xE7\\xE3o. Adicione itens acima.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 2,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            children: \"Coment\\xE1rios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: 1,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 2,\n              placeholder: \"Adicione um coment\\xE1rio...\",\n              value: newComment,\n              onChange: e => setNewComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Seu nome\",\n                size: \"small\",\n                value: commentAuthor,\n                onChange: e => setCommentAuthor(e.target.value),\n                sx: {\n                  width: 200\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleAddComment,\n                disabled: !newComment.trim() || !commentAuthor.trim(),\n                children: \"Adicionar Coment\\xE1rio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              maxHeight: 300,\n              overflow: 'auto'\n            },\n            children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              sx: {\n                p: 2,\n                mb: 2,\n                bgcolor: '#f5f5f5'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mb: 1,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      width: 24,\n                      height: 24,\n                      bgcolor: 'primary.main',\n                      fontSize: '0.875rem'\n                    },\n                    children: comment.author.charAt(0).toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    children: comment.author\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: formatDate(comment.createdAt)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: () => handleDeleteComment(comment.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: comment.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 21\n              }, this)]\n            }, comment.id || index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              py: 2\n            },\n            children: \"Nenhum coment\\xE1rio ainda. Seja o primeiro a comentar!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: !content.trim(),\n        children: task ? 'Atualizar' : 'Adicionar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskFormDialog, \"Hm2EPEB08w9BOIYILYGHL83mpQA=\", false, function () {\n  return [useKanban];\n});\n_c2 = TaskFormDialog;\nexport default TaskFormDialog;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"TaskFormDialog\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","FormControl","InputLabel","Select","MenuItem","Box","Chip","Stack","Autocomplete","Tabs","Tab","Typography","List","ListItem","ListItemText","ListItemIcon","Checkbox","IconButton","Divider","Paper","Avatar","InputAdornment","AdapterDateFns","LocalizationProvider","DatePicker","AddIcon","DeleteIcon","CommentIcon","ChecklistIcon","DescriptionIcon","ImageIcon","PersonIcon","useKanban","jsxDEV","_jsxDEV","TabPanel","children","value","index","other","role","hidden","id","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","_c","TaskFormDialog","open","onClose","task","columnId","_s","state","dispatch","tabValue","setTabValue","content","setContent","description","setDescription","priority","setPriority","dueDate","setDueDate","tags","setTags","newTag","setNewTag","coverImage","setCoverImage","assignedTo","setAssignedTo","checklist","setChecklist","newChecklistItem","setNewChecklistItem","comments","setComments","newComment","setNewComment","commentAuthor","setCommentAuthor","allTags","Array","from","Set","Object","values","tasks","flatMap","sort","Date","handleTabChange","event","newValue","handleAddTag","trim","includes","handleDeleteTag","tagToDelete","filter","tag","handleAddChecklistItem","newItem","Math","random","toString","substring","text","isComplete","handleToggleChecklistItem","itemId","map","item","handleDeleteChecklistItem","handleAddComment","newCommentObj","author","createdAt","handleDeleteComment","commentId","comment","handleSubmit","type","payload","taskId","undefined","forEach","existingCommentIds","c","addTaskAction","setTimeout","column","columns","taskIds","length","newTaskId","checklistStats","total","completed","percent","round","formatDate","date","toLocaleString","day","month","year","hour","minute","maxWidth","fullWidth","sx","maxHeight","pb","px","borderBottom","borderColor","mb","onChange","icon","iconPosition","label","display","flexDirection","gap","pt","e","target","required","autoFocus","multiline","rows","placeholder","flexWrap","minWidth","flexGrow","labelId","dateAdapter","slotProps","textField","format","InputProps","startAdornment","position","inputValue","onInputChange","newInputValue","options","freeSolo","renderInput","params","onKeyPress","key","preventDefault","onClick","variant","size","mt","disabled","direction","spacing","useFlexGap","onDelete","color","alignItems","component","startIcon","width","bgcolor","secondaryAction","edge","disablePadding","checked","disableRipple","primary","textDecoration","py","justifyContent","my","overflow","elevation","p","height","fontSize","charAt","toUpperCase","_c2","$RefreshReg$"],"sources":["C:/Users/Carlos1/Documents/DEV/New/kanban/src/components/TaskFormDialog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Box,\n  Chip,\n  Stack,\n  Autocomplete,\n  Tabs,\n  Tab,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Checkbox,\n  IconButton,\n  Divider,\n  Paper,\n  Avatar,\n  InputAdornment\n} from '@mui/material';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport ChecklistIcon from '@mui/icons-material/Checklist';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport ImageIcon from '@mui/icons-material/Image';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { Task, ChecklistItem, Comment } from '../types/types';\nimport { useKanban } from '../context/KanbanContext';\n\ninterface TaskFormDialogProps {\n  open: boolean;\n  onClose: () => void;\n  task: Task | null;\n  columnId: string;\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel({ children, value, index, ...other }: TabPanelProps) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`task-tabpanel-${index}`}\n      aria-labelledby={`task-tab-${index}`}\n      {...other}\n      style={{ padding: '16px 0' }}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n\nconst TaskFormDialog: React.FC<TaskFormDialogProps> = ({\n  open,\n  onClose,\n  task,\n  columnId,\n}) => {\n  const { state, dispatch } = useKanban();\n  const [tabValue, setTabValue] = useState(0);\n  const [content, setContent] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState<'baixa' | 'média' | 'alta' | ''>('');\n  const [dueDate, setDueDate] = useState<Date | null>(null);\n  const [tags, setTags] = useState<string[]>([]);\n  const [newTag, setNewTag] = useState('');\n  const [coverImage, setCoverImage] = useState('');\n  const [assignedTo, setAssignedTo] = useState('');\n  \n  // Lista de verificação\n  const [checklist, setChecklist] = useState<ChecklistItem[]>([]);\n  const [newChecklistItem, setNewChecklistItem] = useState('');\n  \n  // Comentários\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [newComment, setNewComment] = useState('');\n  const [commentAuthor, setCommentAuthor] = useState('Usuário');\n\n  // Coletar todas as tags existentes para sugestões\n  const allTags = Array.from(\n    new Set(\n      Object.values(state.tasks).flatMap(task => task.tags || [])\n    )\n  ).sort();\n\n  useEffect(() => {\n    if (task) {\n      setContent(task.content);\n      setDescription(task.description || '');\n      setPriority(task.priority || '');\n      setDueDate(task.dueDate ? new Date(task.dueDate) : null);\n      setTags(task.tags || []);\n      setCoverImage(task.coverImage || '');\n      setAssignedTo(task.assignedTo || '');\n      setChecklist(task.checklist || []);\n      setComments(task.comments || []);\n      setTabValue(0); // Reset para a primeira aba ao abrir\n    } else {\n      setContent('');\n      setDescription('');\n      setPriority('');\n      setDueDate(null);\n      setTags([]);\n      setCoverImage('');\n      setAssignedTo('');\n      setChecklist([]);\n      setComments([]);\n      setTabValue(0);\n    }\n  }, [task, open]);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const handleAddTag = () => {\n    if (newTag.trim() && !tags.includes(newTag.trim())) {\n      setTags([...tags, newTag.trim()]);\n      setNewTag('');\n    }\n  };\n\n  const handleDeleteTag = (tagToDelete: string) => {\n    setTags(tags.filter(tag => tag !== tagToDelete));\n  };\n  \n  const handleAddChecklistItem = () => {\n    if (newChecklistItem.trim()) {\n      const newItem: ChecklistItem = {\n        id: Math.random().toString(36).substring(2, 9), // ID simples para o formulário\n        text: newChecklistItem.trim(),\n        isComplete: false\n      };\n      setChecklist([...checklist, newItem]);\n      setNewChecklistItem('');\n    }\n  };\n  \n  const handleToggleChecklistItem = (itemId: string) => {\n    setChecklist(\n      checklist.map(item => \n        item.id === itemId ? { ...item, isComplete: !item.isComplete } : item\n      )\n    );\n  };\n  \n  const handleDeleteChecklistItem = (itemId: string) => {\n    setChecklist(checklist.filter(item => item.id !== itemId));\n  };\n  \n  const handleAddComment = () => {\n    if (newComment.trim()) {\n      const newCommentObj: Comment = {\n        id: Math.random().toString(36).substring(2, 9),\n        text: newComment.trim(),\n        author: commentAuthor,\n        createdAt: new Date()\n      };\n      setComments([...comments, newCommentObj]);\n      setNewComment('');\n    }\n  };\n  \n  const handleDeleteComment = (commentId: string) => {\n    setComments(comments.filter(comment => comment.id !== commentId));\n  };\n\n  const handleSubmit = () => {\n    if (content.trim()) {\n      if (task) {\n        // Editar tarefa existente\n        dispatch({\n          type: 'UPDATE_TASK',\n          payload: {\n            taskId: task.id,\n            content,\n            description: description || undefined,\n            priority: priority || undefined,\n            dueDate: dueDate || undefined,\n            tags,\n            coverImage: coverImage || undefined,\n            assignedTo: assignedTo || undefined,\n          },\n        });\n        \n        // Atualizar itens da lista de verificação\n        // Primeiro remover todos os itens antigos e depois adicionar os novos\n        if (task.checklist) {\n          task.checklist.forEach(item => {\n            dispatch({\n              type: 'DELETE_CHECKLIST_ITEM',\n              payload: { taskId: task.id, itemId: item.id }\n            });\n          });\n        }\n        \n        checklist.forEach(item => {\n          dispatch({\n            type: 'ADD_CHECKLIST_ITEM',\n            payload: { taskId: task.id, text: item.text }\n          });\n          \n          if (item.isComplete) {\n            dispatch({\n              type: 'TOGGLE_CHECKLIST_ITEM',\n              payload: { taskId: task.id, itemId: item.id }\n            });\n          }\n        });\n        \n        // Atualizar comentários\n        // Como os comentários são registros históricos, eles não são substituídos\n        // Aqui apenas adicionamos novos comentários que foram criados no formulário\n        const existingCommentIds = (task.comments || []).map(c => c.id);\n        comments\n          .filter(c => !existingCommentIds.includes(c.id))\n          .forEach(comment => {\n            dispatch({\n              type: 'ADD_COMMENT',\n              payload: { \n                taskId: task.id, \n                text: comment.text, \n                author: comment.author\n              }\n            });\n          });\n        \n      } else {\n        // Adicionar nova tarefa\n        const addTaskAction = {\n          type: 'ADD_TASK' as const,\n          payload: {\n            columnId,\n            content,\n            description: description || undefined,\n            priority: priority || undefined,\n            dueDate: dueDate || undefined,\n            tags,\n            coverImage: coverImage || undefined,\n            assignedTo: assignedTo || undefined,\n          },\n        };\n        \n        dispatch(addTaskAction);\n        \n        // Como é uma nova tarefa, precisamos buscar o ID que foi gerado\n        // Isso seria melhor se o action retornasse o ID gerado, mas vamos usar este workaround\n        // Na prática, você poderia adaptar o context para retornar o ID da tarefa criada\n        setTimeout(() => {\n          // Encontrar a tarefa recém-criada (a última da coluna)\n          const column = state.columns[columnId];\n          if (column && column.taskIds.length > 0) {\n            const newTaskId = column.taskIds[column.taskIds.length - 1];\n            \n            // Adicionar itens da lista de verificação\n            checklist.forEach(item => {\n              dispatch({\n                type: 'ADD_CHECKLIST_ITEM',\n                payload: { taskId: newTaskId, text: item.text }\n              });\n              \n              if (item.isComplete) {\n                dispatch({\n                  type: 'TOGGLE_CHECKLIST_ITEM',\n                  payload: { taskId: newTaskId, itemId: item.id }\n                });\n              }\n            });\n            \n            // Adicionar comentários\n            comments.forEach(comment => {\n              dispatch({\n                type: 'ADD_COMMENT',\n                payload: { \n                  taskId: newTaskId, \n                  text: comment.text, \n                  author: comment.author\n                }\n              });\n            });\n          }\n        }, 100);\n      }\n      onClose();\n    }\n  };\n\n  // Estatísticas da lista de verificação\n  const checklistStats = {\n    total: checklist.length,\n    completed: checklist.filter(item => item.isComplete).length,\n    percent: checklist.length > 0 \n      ? Math.round((checklist.filter(item => item.isComplete).length / checklist.length) * 100) \n      : 0\n  };\n\n  const formatDate = (date: Date) => {\n    return new Date(date).toLocaleString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <Dialog \n      open={open} \n      onClose={onClose} \n      maxWidth=\"md\" \n      fullWidth\n      sx={{ '& .MuiDialog-paper': { maxHeight: '90vh' } }}\n    >\n      <DialogTitle sx={{ pb: 1 }}>\n        {task ? 'Editar Tarefa' : 'Nova Tarefa'}\n      </DialogTitle>\n      \n      <DialogContent sx={{ px: 3, pb: 1 }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\n          <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"task tabs\">\n            <Tab icon={<DescriptionIcon />} iconPosition=\"start\" label=\"Detalhes\" id=\"task-tab-0\" />\n            <Tab icon={<ChecklistIcon />} iconPosition=\"start\" label=\"Lista de Verificação\" id=\"task-tab-1\" />\n            <Tab icon={<CommentIcon />} iconPosition=\"start\" label=\"Comentários\" id=\"task-tab-2\" />\n          </Tabs>\n        </Box>\n        \n        <TabPanel value={tabValue} index={0}>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, pt: 1 }}>\n            <TextField\n              label=\"Título\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              fullWidth\n              required\n              autoFocus\n            />\n            \n            <TextField\n              label=\"Descrição\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              fullWidth\n              multiline\n              rows={3}\n              placeholder=\"Adicione uma descrição detalhada para esta tarefa...\"\n            />\n            \n            <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n              <FormControl sx={{ minWidth: 200, flexGrow: 1 }}>\n                <InputLabel id=\"priority-label\">Prioridade</InputLabel>\n                <Select\n                  labelId=\"priority-label\"\n                  value={priority}\n                  label=\"Prioridade\"\n                  onChange={(e) => setPriority(e.target.value as 'baixa' | 'média' | 'alta' | '')}\n                >\n                  <MenuItem value=\"\">\n                    <em>Nenhuma</em>\n                  </MenuItem>\n                  <MenuItem value=\"baixa\">Baixa</MenuItem>\n                  <MenuItem value=\"média\">Média</MenuItem>\n                  <MenuItem value=\"alta\">Alta</MenuItem>\n                </Select>\n              </FormControl>\n              \n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                  label=\"Data de vencimento\"\n                  value={dueDate}\n                  onChange={(newValue: Date | null) => setDueDate(newValue)}\n                  slotProps={{ textField: { fullWidth: true, sx: { minWidth: 200, flexGrow: 1 } } }}\n                  format=\"dd/MM/yyyy\"\n                />\n              </LocalizationProvider>\n            </Box>\n            \n            <TextField\n              label=\"Atribuído a\"\n              value={assignedTo}\n              onChange={(e) => setAssignedTo(e.target.value)}\n              fullWidth\n              placeholder=\"Digite o nome da pessoa responsável\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n            \n            <TextField\n              label=\"URL da imagem de capa\"\n              value={coverImage}\n              onChange={(e) => setCoverImage(e.target.value)}\n              fullWidth\n              placeholder=\"Cole a URL de uma imagem para usar como capa\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <ImageIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n            {/* Gestão de etiquetas */}\n            <Box>\n              <Autocomplete\n                value={newTag}\n                onChange={(event, newValue) => {\n                  setNewTag(newValue || '');\n                }}\n                inputValue={newTag}\n                onInputChange={(event, newInputValue) => {\n                  setNewTag(newInputValue);\n                }}\n                options={allTags.filter(tag => !tags.includes(tag))}\n                freeSolo\n                renderInput={(params) => (\n                  <TextField \n                    {...params} \n                    label=\"Adicionar etiqueta\" \n                    fullWidth\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') {\n                        e.preventDefault();\n                        handleAddTag();\n                      }\n                    }}\n                  />\n                )}\n              />\n              <Button \n                onClick={handleAddTag} \n                variant=\"outlined\" \n                size=\"small\" \n                sx={{ mt: 1, mb: 2 }}\n                disabled={!newTag.trim() || tags.includes(newTag.trim())}\n              >\n                Adicionar Etiqueta\n              </Button>\n\n              <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" useFlexGap>\n                {tags.map((tag) => (\n                  <Chip\n                    key={tag}\n                    label={tag}\n                    onDelete={() => handleDeleteTag(tag)}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    sx={{ mb: 1 }}\n                  />\n                ))}\n              </Stack>\n            </Box>\n          </Box>\n        </TabPanel>\n        \n        <TabPanel value={tabValue} index={1}>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <Box display=\"flex\" alignItems=\"center\" gap={2}>\n              <Typography variant=\"h6\" component=\"div\">\n                Lista de Verificação\n              </Typography>\n              \n              {checklist.length > 0 && (\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {checklistStats.completed}/{checklistStats.total} concluídos ({checklistStats.percent}%)\n                </Typography>\n              )}\n            </Box>\n            \n            <Box display=\"flex\" gap={1}>\n              <TextField\n                fullWidth\n                size=\"small\"\n                placeholder=\"Adicionar um item\"\n                value={newChecklistItem}\n                onChange={(e) => setNewChecklistItem(e.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                    e.preventDefault();\n                    handleAddChecklistItem();\n                  }\n                }}\n              />\n              <Button \n                variant=\"contained\" \n                onClick={handleAddChecklistItem}\n                disabled={!newChecklistItem.trim()}\n                startIcon={<AddIcon />}\n              >\n                Adicionar\n              </Button>\n            </Box>\n            \n            {checklist.length > 0 ? (\n              <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n                {checklist.map((item) => (\n                  <ListItem\n                    key={item.id}\n                    secondaryAction={\n                      <IconButton edge=\"end\" onClick={() => handleDeleteChecklistItem(item.id)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    }\n                    disablePadding\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        edge=\"start\"\n                        checked={item.isComplete}\n                        onChange={() => handleToggleChecklistItem(item.id)}\n                        disableRipple\n                      />\n                    </ListItemIcon>\n                    <ListItemText \n                      primary={item.text} \n                      sx={{ \n                        textDecoration: item.isComplete ? 'line-through' : 'none',\n                        color: item.isComplete ? 'text.secondary' : 'text.primary'\n                      }}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ py: 2 }}>\n                Nenhum item na lista de verificação. Adicione itens acima.\n              </Typography>\n            )}\n          </Box>\n        </TabPanel>\n        \n        <TabPanel value={tabValue} index={2}>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <Typography variant=\"h6\" component=\"div\">\n              Comentários\n            </Typography>\n            \n            <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n              <TextField\n                fullWidth\n                multiline\n                rows={2}\n                placeholder=\"Adicione um comentário...\"\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n              />\n              \n              <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                <TextField\n                  label=\"Seu nome\"\n                  size=\"small\"\n                  value={commentAuthor}\n                  onChange={(e) => setCommentAuthor(e.target.value)}\n                  sx={{ width: 200 }}\n                />\n                \n                <Button \n                  variant=\"contained\" \n                  onClick={handleAddComment}\n                  disabled={!newComment.trim() || !commentAuthor.trim()}\n                >\n                  Adicionar Comentário\n                </Button>\n              </Box>\n            </Box>\n            \n            <Divider sx={{ my: 1 }} />\n            \n            {comments.length > 0 ? (\n              <Box sx={{ maxHeight: 300, overflow: 'auto' }}>\n                {comments.map((comment, index) => (\n                  <Paper key={comment.id || index} elevation={0} sx={{ p: 2, mb: 2, bgcolor: '#f5f5f5' }}>\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\n                      <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                        <Avatar sx={{ width: 24, height: 24, bgcolor: 'primary.main', fontSize: '0.875rem' }}>\n                          {comment.author.charAt(0).toUpperCase()}\n                        </Avatar>\n                        <Typography variant=\"subtitle2\">{comment.author}</Typography>\n                      </Box>\n                      \n                      <Box display=\"flex\" alignItems=\"center\">\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {formatDate(comment.createdAt)}\n                        </Typography>\n                        <IconButton size=\"small\" onClick={() => handleDeleteComment(comment.id)}>\n                          <DeleteIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Box>\n                    </Box>\n                    \n                    <Typography variant=\"body2\">{comment.text}</Typography>\n                  </Paper>\n                ))}\n              </Box>\n            ) : (\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ py: 2 }}>\n                Nenhum comentário ainda. Seja o primeiro a comentar!\n              </Typography>\n            )}\n          </Box>\n        </TabPanel>\n      </DialogContent>\n      \n      <DialogActions>\n        <Button onClick={onClose}>Cancelar</Button>\n        <Button\n          onClick={handleSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!content.trim()}\n        >\n          {task ? 'Atualizar' : 'Adicionar'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default TaskFormDialog; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,SAAS,EACTC,MAAM,EACNC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,GAAG,EACHC,IAAI,EACJC,KAAK,EACLC,YAAY,EACZC,IAAI,EACJC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,YAAY,EACZC,QAAQ,EACRC,UAAU,EACVC,OAAO,EACPC,KAAK,EACLC,MAAM,EACNC,cAAc,QACT,eAAe;AACtB,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,oBAAoB,QAAQ,0CAA0C;AAC/E,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,UAAU,MAAM,4BAA4B;AAEnD,SAASC,SAAS,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAerD,SAASC,QAAQA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,KAAK;EAAE,GAAGC;AAAqB,CAAC,EAAE;EACrE,oBACEL,OAAA;IACEM,IAAI,EAAC,UAAU;IACfC,MAAM,EAAEJ,KAAK,KAAKC,KAAM;IACxBI,EAAE,EAAE,iBAAiBJ,KAAK,EAAG;IAC7B,mBAAiB,YAAYA,KAAK,EAAG;IAAA,GACjCC,KAAK;IACTI,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAS,CAAE;IAAAR,QAAA,EAE5BC,KAAK,KAAKC,KAAK,IAAIF;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAACC,EAAA,GAbQd,QAAQ;AAejB,MAAMe,cAA6C,GAAGA,CAAC;EACrDC,IAAI;EACJC,OAAO;EACPC,IAAI;EACJC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGzB,SAAS,CAAC,CAAC;EACvC,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAGlE,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACmE,OAAO,EAAEC,UAAU,CAAC,GAAGpE,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqE,WAAW,EAAEC,cAAc,CAAC,GAAGtE,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuE,QAAQ,EAAEC,WAAW,CAAC,GAAGxE,QAAQ,CAAkC,EAAE,CAAC;EAC7E,MAAM,CAACyE,OAAO,EAAEC,UAAU,CAAC,GAAG1E,QAAQ,CAAc,IAAI,CAAC;EACzD,MAAM,CAAC2E,IAAI,EAAEC,OAAO,CAAC,GAAG5E,QAAQ,CAAW,EAAE,CAAC;EAC9C,MAAM,CAAC6E,MAAM,EAAEC,SAAS,CAAC,GAAG9E,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC+E,UAAU,EAAEC,aAAa,CAAC,GAAGhF,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiF,UAAU,EAAEC,aAAa,CAAC,GAAGlF,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACmF,SAAS,EAAEC,YAAY,CAAC,GAAGpF,QAAQ,CAAkB,EAAE,CAAC;EAC/D,MAAM,CAACqF,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtF,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACA,MAAM,CAACuF,QAAQ,EAAEC,WAAW,CAAC,GAAGxF,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACyF,UAAU,EAAEC,aAAa,CAAC,GAAG1F,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2F,aAAa,EAAEC,gBAAgB,CAAC,GAAG5F,QAAQ,CAAC,SAAS,CAAC;;EAE7D;EACA,MAAM6F,OAAO,GAAGC,KAAK,CAACC,IAAI,CACxB,IAAIC,GAAG,CACLC,MAAM,CAACC,MAAM,CAACnC,KAAK,CAACoC,KAAK,CAAC,CAACC,OAAO,CAACxC,IAAI,IAAIA,IAAI,CAACe,IAAI,IAAI,EAAE,CAC5D,CACF,CAAC,CAAC0B,IAAI,CAAC,CAAC;EAERpG,SAAS,CAAC,MAAM;IACd,IAAI2D,IAAI,EAAE;MACRQ,UAAU,CAACR,IAAI,CAACO,OAAO,CAAC;MACxBG,cAAc,CAACV,IAAI,CAACS,WAAW,IAAI,EAAE,CAAC;MACtCG,WAAW,CAACZ,IAAI,CAACW,QAAQ,IAAI,EAAE,CAAC;MAChCG,UAAU,CAACd,IAAI,CAACa,OAAO,GAAG,IAAI6B,IAAI,CAAC1C,IAAI,CAACa,OAAO,CAAC,GAAG,IAAI,CAAC;MACxDG,OAAO,CAAChB,IAAI,CAACe,IAAI,IAAI,EAAE,CAAC;MACxBK,aAAa,CAACpB,IAAI,CAACmB,UAAU,IAAI,EAAE,CAAC;MACpCG,aAAa,CAACtB,IAAI,CAACqB,UAAU,IAAI,EAAE,CAAC;MACpCG,YAAY,CAACxB,IAAI,CAACuB,SAAS,IAAI,EAAE,CAAC;MAClCK,WAAW,CAAC5B,IAAI,CAAC2B,QAAQ,IAAI,EAAE,CAAC;MAChCrB,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM;MACLE,UAAU,CAAC,EAAE,CAAC;MACdE,cAAc,CAAC,EAAE,CAAC;MAClBE,WAAW,CAAC,EAAE,CAAC;MACfE,UAAU,CAAC,IAAI,CAAC;MAChBE,OAAO,CAAC,EAAE,CAAC;MACXI,aAAa,CAAC,EAAE,CAAC;MACjBE,aAAa,CAAC,EAAE,CAAC;MACjBE,YAAY,CAAC,EAAE,CAAC;MAChBI,WAAW,CAAC,EAAE,CAAC;MACftB,WAAW,CAAC,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACN,IAAI,EAAEF,IAAI,CAAC,CAAC;EAEhB,MAAM6C,eAAe,GAAGA,CAACC,KAA2B,EAAEC,QAAgB,KAAK;IACzEvC,WAAW,CAACuC,QAAQ,CAAC;EACvB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI7B,MAAM,CAAC8B,IAAI,CAAC,CAAC,IAAI,CAAChC,IAAI,CAACiC,QAAQ,CAAC/B,MAAM,CAAC8B,IAAI,CAAC,CAAC,CAAC,EAAE;MAClD/B,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEE,MAAM,CAAC8B,IAAI,CAAC,CAAC,CAAC,CAAC;MACjC7B,SAAS,CAAC,EAAE,CAAC;IACf;EACF,CAAC;EAED,MAAM+B,eAAe,GAAIC,WAAmB,IAAK;IAC/ClC,OAAO,CAACD,IAAI,CAACoC,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAKF,WAAW,CAAC,CAAC;EAClD,CAAC;EAED,MAAMG,sBAAsB,GAAGA,CAAA,KAAM;IACnC,IAAI5B,gBAAgB,CAACsB,IAAI,CAAC,CAAC,EAAE;MAC3B,MAAMO,OAAsB,GAAG;QAC7BjE,EAAE,EAAEkE,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QAAE;QAChDC,IAAI,EAAElC,gBAAgB,CAACsB,IAAI,CAAC,CAAC;QAC7Ba,UAAU,EAAE;MACd,CAAC;MACDpC,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE+B,OAAO,CAAC,CAAC;MACrC5B,mBAAmB,CAAC,EAAE,CAAC;IACzB;EACF,CAAC;EAED,MAAMmC,yBAAyB,GAAIC,MAAc,IAAK;IACpDtC,YAAY,CACVD,SAAS,CAACwC,GAAG,CAACC,IAAI,IAChBA,IAAI,CAAC3E,EAAE,KAAKyE,MAAM,GAAG;MAAE,GAAGE,IAAI;MAAEJ,UAAU,EAAE,CAACI,IAAI,CAACJ;IAAW,CAAC,GAAGI,IACnE,CACF,CAAC;EACH,CAAC;EAED,MAAMC,yBAAyB,GAAIH,MAAc,IAAK;IACpDtC,YAAY,CAACD,SAAS,CAAC4B,MAAM,CAACa,IAAI,IAAIA,IAAI,CAAC3E,EAAE,KAAKyE,MAAM,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIrC,UAAU,CAACkB,IAAI,CAAC,CAAC,EAAE;MACrB,MAAMoB,aAAsB,GAAG;QAC7B9E,EAAE,EAAEkE,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9CC,IAAI,EAAE9B,UAAU,CAACkB,IAAI,CAAC,CAAC;QACvBqB,MAAM,EAAErC,aAAa;QACrBsC,SAAS,EAAE,IAAI3B,IAAI,CAAC;MACtB,CAAC;MACDd,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEwC,aAAa,CAAC,CAAC;MACzCrC,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,MAAMwC,mBAAmB,GAAIC,SAAiB,IAAK;IACjD3C,WAAW,CAACD,QAAQ,CAACwB,MAAM,CAACqB,OAAO,IAAIA,OAAO,CAACnF,EAAE,KAAKkF,SAAS,CAAC,CAAC;EACnE,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIlE,OAAO,CAACwC,IAAI,CAAC,CAAC,EAAE;MAClB,IAAI/C,IAAI,EAAE;QACR;QACAI,QAAQ,CAAC;UACPsE,IAAI,EAAE,aAAa;UACnBC,OAAO,EAAE;YACPC,MAAM,EAAE5E,IAAI,CAACX,EAAE;YACfkB,OAAO;YACPE,WAAW,EAAEA,WAAW,IAAIoE,SAAS;YACrClE,QAAQ,EAAEA,QAAQ,IAAIkE,SAAS;YAC/BhE,OAAO,EAAEA,OAAO,IAAIgE,SAAS;YAC7B9D,IAAI;YACJI,UAAU,EAAEA,UAAU,IAAI0D,SAAS;YACnCxD,UAAU,EAAEA,UAAU,IAAIwD;UAC5B;QACF,CAAC,CAAC;;QAEF;QACA;QACA,IAAI7E,IAAI,CAACuB,SAAS,EAAE;UAClBvB,IAAI,CAACuB,SAAS,CAACuD,OAAO,CAACd,IAAI,IAAI;YAC7B5D,QAAQ,CAAC;cACPsE,IAAI,EAAE,uBAAuB;cAC7BC,OAAO,EAAE;gBAAEC,MAAM,EAAE5E,IAAI,CAACX,EAAE;gBAAEyE,MAAM,EAAEE,IAAI,CAAC3E;cAAG;YAC9C,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ;QAEAkC,SAAS,CAACuD,OAAO,CAACd,IAAI,IAAI;UACxB5D,QAAQ,CAAC;YACPsE,IAAI,EAAE,oBAAoB;YAC1BC,OAAO,EAAE;cAAEC,MAAM,EAAE5E,IAAI,CAACX,EAAE;cAAEsE,IAAI,EAAEK,IAAI,CAACL;YAAK;UAC9C,CAAC,CAAC;UAEF,IAAIK,IAAI,CAACJ,UAAU,EAAE;YACnBxD,QAAQ,CAAC;cACPsE,IAAI,EAAE,uBAAuB;cAC7BC,OAAO,EAAE;gBAAEC,MAAM,EAAE5E,IAAI,CAACX,EAAE;gBAAEyE,MAAM,EAAEE,IAAI,CAAC3E;cAAG;YAC9C,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;;QAEF;QACA;QACA;QACA,MAAM0F,kBAAkB,GAAG,CAAC/E,IAAI,CAAC2B,QAAQ,IAAI,EAAE,EAAEoC,GAAG,CAACiB,CAAC,IAAIA,CAAC,CAAC3F,EAAE,CAAC;QAC/DsC,QAAQ,CACLwB,MAAM,CAAC6B,CAAC,IAAI,CAACD,kBAAkB,CAAC/B,QAAQ,CAACgC,CAAC,CAAC3F,EAAE,CAAC,CAAC,CAC/CyF,OAAO,CAACN,OAAO,IAAI;UAClBpE,QAAQ,CAAC;YACPsE,IAAI,EAAE,aAAa;YACnBC,OAAO,EAAE;cACPC,MAAM,EAAE5E,IAAI,CAACX,EAAE;cACfsE,IAAI,EAAEa,OAAO,CAACb,IAAI;cAClBS,MAAM,EAAEI,OAAO,CAACJ;YAClB;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;MAEN,CAAC,MAAM;QACL;QACA,MAAMa,aAAa,GAAG;UACpBP,IAAI,EAAE,UAAmB;UACzBC,OAAO,EAAE;YACP1E,QAAQ;YACRM,OAAO;YACPE,WAAW,EAAEA,WAAW,IAAIoE,SAAS;YACrClE,QAAQ,EAAEA,QAAQ,IAAIkE,SAAS;YAC/BhE,OAAO,EAAEA,OAAO,IAAIgE,SAAS;YAC7B9D,IAAI;YACJI,UAAU,EAAEA,UAAU,IAAI0D,SAAS;YACnCxD,UAAU,EAAEA,UAAU,IAAIwD;UAC5B;QACF,CAAC;QAEDzE,QAAQ,CAAC6E,aAAa,CAAC;;QAEvB;QACA;QACA;QACAC,UAAU,CAAC,MAAM;UACf;UACA,MAAMC,MAAM,GAAGhF,KAAK,CAACiF,OAAO,CAACnF,QAAQ,CAAC;UACtC,IAAIkF,MAAM,IAAIA,MAAM,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;YACvC,MAAMC,SAAS,GAAGJ,MAAM,CAACE,OAAO,CAACF,MAAM,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;;YAE3D;YACA/D,SAAS,CAACuD,OAAO,CAACd,IAAI,IAAI;cACxB5D,QAAQ,CAAC;gBACPsE,IAAI,EAAE,oBAAoB;gBAC1BC,OAAO,EAAE;kBAAEC,MAAM,EAAEW,SAAS;kBAAE5B,IAAI,EAAEK,IAAI,CAACL;gBAAK;cAChD,CAAC,CAAC;cAEF,IAAIK,IAAI,CAACJ,UAAU,EAAE;gBACnBxD,QAAQ,CAAC;kBACPsE,IAAI,EAAE,uBAAuB;kBAC7BC,OAAO,EAAE;oBAAEC,MAAM,EAAEW,SAAS;oBAAEzB,MAAM,EAAEE,IAAI,CAAC3E;kBAAG;gBAChD,CAAC,CAAC;cACJ;YACF,CAAC,CAAC;;YAEF;YACAsC,QAAQ,CAACmD,OAAO,CAACN,OAAO,IAAI;cAC1BpE,QAAQ,CAAC;gBACPsE,IAAI,EAAE,aAAa;gBACnBC,OAAO,EAAE;kBACPC,MAAM,EAAEW,SAAS;kBACjB5B,IAAI,EAAEa,OAAO,CAACb,IAAI;kBAClBS,MAAM,EAAEI,OAAO,CAACJ;gBAClB;cACF,CAAC,CAAC;YACJ,CAAC,CAAC;UACJ;QACF,CAAC,EAAE,GAAG,CAAC;MACT;MACArE,OAAO,CAAC,CAAC;IACX;EACF,CAAC;;EAED;EACA,MAAMyF,cAAc,GAAG;IACrBC,KAAK,EAAElE,SAAS,CAAC+D,MAAM;IACvBI,SAAS,EAAEnE,SAAS,CAAC4B,MAAM,CAACa,IAAI,IAAIA,IAAI,CAACJ,UAAU,CAAC,CAAC0B,MAAM;IAC3DK,OAAO,EAAEpE,SAAS,CAAC+D,MAAM,GAAG,CAAC,GACzB/B,IAAI,CAACqC,KAAK,CAAErE,SAAS,CAAC4B,MAAM,CAACa,IAAI,IAAIA,IAAI,CAACJ,UAAU,CAAC,CAAC0B,MAAM,GAAG/D,SAAS,CAAC+D,MAAM,GAAI,GAAG,CAAC,GACvF;EACN,CAAC;EAED,MAAMO,UAAU,GAAIC,IAAU,IAAK;IACjC,OAAO,IAAIpD,IAAI,CAACoD,IAAI,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;MAC5CC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,oBACEvH,OAAA,CAACvC,MAAM;IACLwD,IAAI,EAAEA,IAAK;IACXC,OAAO,EAAEA,OAAQ;IACjBsG,QAAQ,EAAC,IAAI;IACbC,SAAS;IACTC,EAAE,EAAE;MAAE,oBAAoB,EAAE;QAAEC,SAAS,EAAE;MAAO;IAAE,CAAE;IAAAzH,QAAA,gBAEpDF,OAAA,CAACtC,WAAW;MAACgK,EAAE,EAAE;QAAEE,EAAE,EAAE;MAAE,CAAE;MAAA1H,QAAA,EACxBiB,IAAI,GAAG,eAAe,GAAG;IAAa;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAEdd,OAAA,CAACrC,aAAa;MAAC+J,EAAE,EAAE;QAAEG,EAAE,EAAE,CAAC;QAAED,EAAE,EAAE;MAAE,CAAE;MAAA1H,QAAA,gBAClCF,OAAA,CAAC7B,GAAG;QAACuJ,EAAE,EAAE;UAAEI,YAAY,EAAE,CAAC;UAAEC,WAAW,EAAE,SAAS;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAA9H,QAAA,eAC1DF,OAAA,CAACzB,IAAI;UAAC4B,KAAK,EAAEqB,QAAS;UAACyG,QAAQ,EAAEnE,eAAgB;UAAC,cAAW,WAAW;UAAA5D,QAAA,gBACtEF,OAAA,CAACxB,GAAG;YAAC0J,IAAI,eAAElI,OAAA,CAACL,eAAe;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAACqH,YAAY,EAAC,OAAO;YAACC,KAAK,EAAC,UAAU;YAAC5H,EAAE,EAAC;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxFd,OAAA,CAACxB,GAAG;YAAC0J,IAAI,eAAElI,OAAA,CAACN,aAAa;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAACqH,YAAY,EAAC,OAAO;YAACC,KAAK,EAAC,4BAAsB;YAAC5H,EAAE,EAAC;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClGd,OAAA,CAACxB,GAAG;YAAC0J,IAAI,eAAElI,OAAA,CAACP,WAAW;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAACqH,YAAY,EAAC,OAAO;YAACC,KAAK,EAAC,gBAAa;YAAC5H,EAAE,EAAC;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAENd,OAAA,CAACC,QAAQ;QAACE,KAAK,EAAEqB,QAAS;QAACpB,KAAK,EAAE,CAAE;QAAAF,QAAA,eAClCF,OAAA,CAAC7B,GAAG;UAACuJ,EAAE,EAAE;YAAEW,OAAO,EAAE,MAAM;YAAEC,aAAa,EAAE,QAAQ;YAAEC,GAAG,EAAE,CAAC;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAtI,QAAA,gBACnEF,OAAA,CAACnC,SAAS;YACRuK,KAAK,EAAC,WAAQ;YACdjI,KAAK,EAAEuB,OAAQ;YACfuG,QAAQ,EAAGQ,CAAC,IAAK9G,UAAU,CAAC8G,CAAC,CAACC,MAAM,CAACvI,KAAK,CAAE;YAC5CsH,SAAS;YACTkB,QAAQ;YACRC,SAAS;UAAA;YAAAjI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eAEFd,OAAA,CAACnC,SAAS;YACRuK,KAAK,EAAC,iBAAW;YACjBjI,KAAK,EAAEyB,WAAY;YACnBqG,QAAQ,EAAGQ,CAAC,IAAK5G,cAAc,CAAC4G,CAAC,CAACC,MAAM,CAACvI,KAAK,CAAE;YAChDsH,SAAS;YACToB,SAAS;YACTC,IAAI,EAAE,CAAE;YACRC,WAAW,EAAC;UAAsD;YAAApI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnE,CAAC,eAEFd,OAAA,CAAC7B,GAAG;YAACuJ,EAAE,EAAE;cAAEW,OAAO,EAAE,MAAM;cAAEE,GAAG,EAAE,CAAC;cAAES,QAAQ,EAAE;YAAO,CAAE;YAAA9I,QAAA,gBACrDF,OAAA,CAACjC,WAAW;cAAC2J,EAAE,EAAE;gBAAEuB,QAAQ,EAAE,GAAG;gBAAEC,QAAQ,EAAE;cAAE,CAAE;cAAAhJ,QAAA,gBAC9CF,OAAA,CAAChC,UAAU;gBAACwC,EAAE,EAAC,gBAAgB;gBAAAN,QAAA,EAAC;cAAU;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACvDd,OAAA,CAAC/B,MAAM;gBACLkL,OAAO,EAAC,gBAAgB;gBACxBhJ,KAAK,EAAE2B,QAAS;gBAChBsG,KAAK,EAAC,YAAY;gBAClBH,QAAQ,EAAGQ,CAAC,IAAK1G,WAAW,CAAC0G,CAAC,CAACC,MAAM,CAACvI,KAAwC,CAAE;gBAAAD,QAAA,gBAEhFF,OAAA,CAAC9B,QAAQ;kBAACiC,KAAK,EAAC,EAAE;kBAAAD,QAAA,eAChBF,OAAA;oBAAAE,QAAA,EAAI;kBAAO;oBAAAS,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACR,CAAC,eACXd,OAAA,CAAC9B,QAAQ;kBAACiC,KAAK,EAAC,OAAO;kBAAAD,QAAA,EAAC;gBAAK;kBAAAS,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC,eACxCd,OAAA,CAAC9B,QAAQ;kBAACiC,KAAK,EAAC,UAAO;kBAAAD,QAAA,EAAC;gBAAK;kBAAAS,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC,eACxCd,OAAA,CAAC9B,QAAQ;kBAACiC,KAAK,EAAC,MAAM;kBAAAD,QAAA,EAAC;gBAAI;kBAAAS,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAU,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAEdd,OAAA,CAACX,oBAAoB;cAAC+J,WAAW,EAAEhK,cAAe;cAAAc,QAAA,eAChDF,OAAA,CAACV,UAAU;gBACT8I,KAAK,EAAC,oBAAoB;gBAC1BjI,KAAK,EAAE6B,OAAQ;gBACfiG,QAAQ,EAAGjE,QAAqB,IAAK/B,UAAU,CAAC+B,QAAQ,CAAE;gBAC1DqF,SAAS,EAAE;kBAAEC,SAAS,EAAE;oBAAE7B,SAAS,EAAE,IAAI;oBAAEC,EAAE,EAAE;sBAAEuB,QAAQ,EAAE,GAAG;sBAAEC,QAAQ,EAAE;oBAAE;kBAAE;gBAAE,CAAE;gBAClFK,MAAM,EAAC;cAAY;gBAAA5I,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACkB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eAENd,OAAA,CAACnC,SAAS;YACRuK,KAAK,EAAC,gBAAa;YACnBjI,KAAK,EAAEqC,UAAW;YAClByF,QAAQ,EAAGQ,CAAC,IAAKhG,aAAa,CAACgG,CAAC,CAACC,MAAM,CAACvI,KAAK,CAAE;YAC/CsH,SAAS;YACTsB,WAAW,EAAC,wCAAqC;YACjDS,UAAU,EAAE;cACVC,cAAc,eACZzJ,OAAA,CAACb,cAAc;gBAACuK,QAAQ,EAAC,OAAO;gBAAAxJ,QAAA,eAC9BF,OAAA,CAACH,UAAU;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA;YAEpB;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEFd,OAAA,CAACnC,SAAS;YACRuK,KAAK,EAAC,uBAAuB;YAC7BjI,KAAK,EAAEmC,UAAW;YAClB2F,QAAQ,EAAGQ,CAAC,IAAKlG,aAAa,CAACkG,CAAC,CAACC,MAAM,CAACvI,KAAK,CAAE;YAC/CsH,SAAS;YACTsB,WAAW,EAAC,8CAA8C;YAC1DS,UAAU,EAAE;cACVC,cAAc,eACZzJ,OAAA,CAACb,cAAc;gBAACuK,QAAQ,EAAC,OAAO;gBAAAxJ,QAAA,eAC9BF,OAAA,CAACJ,SAAS;kBAAAe,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YAEpB;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGFd,OAAA,CAAC7B,GAAG;YAAA+B,QAAA,gBACFF,OAAA,CAAC1B,YAAY;cACX6B,KAAK,EAAEiC,MAAO;cACd6F,QAAQ,EAAEA,CAAClE,KAAK,EAAEC,QAAQ,KAAK;gBAC7B3B,SAAS,CAAC2B,QAAQ,IAAI,EAAE,CAAC;cAC3B,CAAE;cACF2F,UAAU,EAAEvH,MAAO;cACnBwH,aAAa,EAAEA,CAAC7F,KAAK,EAAE8F,aAAa,KAAK;gBACvCxH,SAAS,CAACwH,aAAa,CAAC;cAC1B,CAAE;cACFC,OAAO,EAAE1G,OAAO,CAACkB,MAAM,CAACC,GAAG,IAAI,CAACrC,IAAI,CAACiC,QAAQ,CAACI,GAAG,CAAC,CAAE;cACpDwF,QAAQ;cACRC,WAAW,EAAGC,MAAM,iBAClBjK,OAAA,CAACnC,SAAS;gBAAA,GACJoM,MAAM;gBACV7B,KAAK,EAAC,oBAAoB;gBAC1BX,SAAS;gBACTyC,UAAU,EAAGzB,CAAC,IAAK;kBACjB,IAAIA,CAAC,CAAC0B,GAAG,KAAK,OAAO,EAAE;oBACrB1B,CAAC,CAAC2B,cAAc,CAAC,CAAC;oBAClBnG,YAAY,CAAC,CAAC;kBAChB;gBACF;cAAE;gBAAAtD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YACD;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACFd,OAAA,CAAClC,MAAM;cACLuM,OAAO,EAAEpG,YAAa;cACtBqG,OAAO,EAAC,UAAU;cAClBC,IAAI,EAAC,OAAO;cACZ7C,EAAE,EAAE;gBAAE8C,EAAE,EAAE,CAAC;gBAAExC,EAAE,EAAE;cAAE,CAAE;cACrByC,QAAQ,EAAE,CAACrI,MAAM,CAAC8B,IAAI,CAAC,CAAC,IAAIhC,IAAI,CAACiC,QAAQ,CAAC/B,MAAM,CAAC8B,IAAI,CAAC,CAAC,CAAE;cAAAhE,QAAA,EAC1D;YAED;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAETd,OAAA,CAAC3B,KAAK;cAACqM,SAAS,EAAC,KAAK;cAACC,OAAO,EAAE,CAAE;cAAC3B,QAAQ,EAAC,MAAM;cAAC4B,UAAU;cAAA1K,QAAA,EAC1DgC,IAAI,CAACgD,GAAG,CAAEX,GAAG,iBACZvE,OAAA,CAAC5B,IAAI;gBAEHgK,KAAK,EAAE7D,GAAI;gBACXsG,QAAQ,EAAEA,CAAA,KAAMzG,eAAe,CAACG,GAAG,CAAE;gBACrCuG,KAAK,EAAC,SAAS;gBACfR,OAAO,EAAC,UAAU;gBAClBC,IAAI,EAAC,OAAO;gBACZ7C,EAAE,EAAE;kBAAEM,EAAE,EAAE;gBAAE;cAAE,GANTzD,GAAG;gBAAA5D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAOT,CACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEXd,OAAA,CAACC,QAAQ;QAACE,KAAK,EAAEqB,QAAS;QAACpB,KAAK,EAAE,CAAE;QAAAF,QAAA,eAClCF,OAAA,CAAC7B,GAAG;UAACuJ,EAAE,EAAE;YAAEW,OAAO,EAAE,MAAM;YAAEC,aAAa,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAE,CAAE;UAAArI,QAAA,gBAC5DF,OAAA,CAAC7B,GAAG;YAACkK,OAAO,EAAC,MAAM;YAAC0C,UAAU,EAAC,QAAQ;YAACxC,GAAG,EAAE,CAAE;YAAArI,QAAA,gBAC7CF,OAAA,CAACvB,UAAU;cAAC6L,OAAO,EAAC,IAAI;cAACU,SAAS,EAAC,KAAK;cAAA9K,QAAA,EAAC;YAEzC;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,EAEZ4B,SAAS,CAAC+D,MAAM,GAAG,CAAC,iBACnBzG,OAAA,CAACvB,UAAU;cAAC6L,OAAO,EAAC,OAAO;cAACQ,KAAK,EAAC,gBAAgB;cAAA5K,QAAA,GAC/CyG,cAAc,CAACE,SAAS,EAAC,GAAC,EAACF,cAAc,CAACC,KAAK,EAAC,kBAAa,EAACD,cAAc,CAACG,OAAO,EAAC,IACxF;YAAA;cAAAnG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CACb;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAENd,OAAA,CAAC7B,GAAG;YAACkK,OAAO,EAAC,MAAM;YAACE,GAAG,EAAE,CAAE;YAAArI,QAAA,gBACzBF,OAAA,CAACnC,SAAS;cACR4J,SAAS;cACT8C,IAAI,EAAC,OAAO;cACZxB,WAAW,EAAC,mBAAmB;cAC/B5I,KAAK,EAAEyC,gBAAiB;cACxBqF,QAAQ,EAAGQ,CAAC,IAAK5F,mBAAmB,CAAC4F,CAAC,CAACC,MAAM,CAACvI,KAAK,CAAE;cACrD+J,UAAU,EAAGzB,CAAC,IAAK;gBACjB,IAAIA,CAAC,CAAC0B,GAAG,KAAK,OAAO,EAAE;kBACrB1B,CAAC,CAAC2B,cAAc,CAAC,CAAC;kBAClB5F,sBAAsB,CAAC,CAAC;gBAC1B;cACF;YAAE;cAAA7D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACFd,OAAA,CAAClC,MAAM;cACLwM,OAAO,EAAC,WAAW;cACnBD,OAAO,EAAE7F,sBAAuB;cAChCiG,QAAQ,EAAE,CAAC7H,gBAAgB,CAACsB,IAAI,CAAC,CAAE;cACnC+G,SAAS,eAAEjL,OAAA,CAACT,OAAO;gBAAAoB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAAAZ,QAAA,EACxB;YAED;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAEL4B,SAAS,CAAC+D,MAAM,GAAG,CAAC,gBACnBzG,OAAA,CAACtB,IAAI;YAACgJ,EAAE,EAAE;cAAEwD,KAAK,EAAE,MAAM;cAAEC,OAAO,EAAE;YAAmB,CAAE;YAAAjL,QAAA,EACtDwC,SAAS,CAACwC,GAAG,CAAEC,IAAI,iBAClBnF,OAAA,CAACrB,QAAQ;cAEPyM,eAAe,eACbpL,OAAA,CAACjB,UAAU;gBAACsM,IAAI,EAAC,KAAK;gBAAChB,OAAO,EAAEA,CAAA,KAAMjF,yBAAyB,CAACD,IAAI,CAAC3E,EAAE,CAAE;gBAAAN,QAAA,eACvEF,OAAA,CAACR,UAAU;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CACb;cACDwK,cAAc;cAAApL,QAAA,gBAEdF,OAAA,CAACnB,YAAY;gBAAAqB,QAAA,eACXF,OAAA,CAAClB,QAAQ;kBACPuM,IAAI,EAAC,OAAO;kBACZE,OAAO,EAAEpG,IAAI,CAACJ,UAAW;kBACzBkD,QAAQ,EAAEA,CAAA,KAAMjD,yBAAyB,CAACG,IAAI,CAAC3E,EAAE,CAAE;kBACnDgL,aAAa;gBAAA;kBAAA7K,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACU,CAAC,eACfd,OAAA,CAACpB,YAAY;gBACX6M,OAAO,EAAEtG,IAAI,CAACL,IAAK;gBACnB4C,EAAE,EAAE;kBACFgE,cAAc,EAAEvG,IAAI,CAACJ,UAAU,GAAG,cAAc,GAAG,MAAM;kBACzD+F,KAAK,EAAE3F,IAAI,CAACJ,UAAU,GAAG,gBAAgB,GAAG;gBAC9C;cAAE;gBAAApE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA,GAtBGqE,IAAI,CAAC3E,EAAE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAuBJ,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,gBAEPd,OAAA,CAACvB,UAAU;YAAC6L,OAAO,EAAC,OAAO;YAACQ,KAAK,EAAC,gBAAgB;YAACpD,EAAE,EAAE;cAAEiE,EAAE,EAAE;YAAE,CAAE;YAAAzL,QAAA,EAAC;UAElE;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CACb;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEXd,OAAA,CAACC,QAAQ;QAACE,KAAK,EAAEqB,QAAS;QAACpB,KAAK,EAAE,CAAE;QAAAF,QAAA,eAClCF,OAAA,CAAC7B,GAAG;UAACuJ,EAAE,EAAE;YAAEW,OAAO,EAAE,MAAM;YAAEC,aAAa,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAE,CAAE;UAAArI,QAAA,gBAC5DF,OAAA,CAACvB,UAAU;YAAC6L,OAAO,EAAC,IAAI;YAACU,SAAS,EAAC,KAAK;YAAA9K,QAAA,EAAC;UAEzC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAEbd,OAAA,CAAC7B,GAAG;YAACkK,OAAO,EAAC,MAAM;YAACC,aAAa,EAAC,QAAQ;YAACC,GAAG,EAAE,CAAE;YAAArI,QAAA,gBAChDF,OAAA,CAACnC,SAAS;cACR4J,SAAS;cACToB,SAAS;cACTC,IAAI,EAAE,CAAE;cACRC,WAAW,EAAC,8BAA2B;cACvC5I,KAAK,EAAE6C,UAAW;cAClBiF,QAAQ,EAAGQ,CAAC,IAAKxF,aAAa,CAACwF,CAAC,CAACC,MAAM,CAACvI,KAAK;YAAE;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,eAEFd,OAAA,CAAC7B,GAAG;cAACkK,OAAO,EAAC,MAAM;cAACuD,cAAc,EAAC,eAAe;cAACb,UAAU,EAAC,QAAQ;cAAA7K,QAAA,gBACpEF,OAAA,CAACnC,SAAS;gBACRuK,KAAK,EAAC,UAAU;gBAChBmC,IAAI,EAAC,OAAO;gBACZpK,KAAK,EAAE+C,aAAc;gBACrB+E,QAAQ,EAAGQ,CAAC,IAAKtF,gBAAgB,CAACsF,CAAC,CAACC,MAAM,CAACvI,KAAK,CAAE;gBAClDuH,EAAE,EAAE;kBAAEwD,KAAK,EAAE;gBAAI;cAAE;gBAAAvK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB,CAAC,eAEFd,OAAA,CAAClC,MAAM;gBACLwM,OAAO,EAAC,WAAW;gBACnBD,OAAO,EAAEhF,gBAAiB;gBAC1BoF,QAAQ,EAAE,CAACzH,UAAU,CAACkB,IAAI,CAAC,CAAC,IAAI,CAAChB,aAAa,CAACgB,IAAI,CAAC,CAAE;gBAAAhE,QAAA,EACvD;cAED;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENd,OAAA,CAAChB,OAAO;YAAC0I,EAAE,EAAE;cAAEmE,EAAE,EAAE;YAAE;UAAE;YAAAlL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAEzBgC,QAAQ,CAAC2D,MAAM,GAAG,CAAC,gBAClBzG,OAAA,CAAC7B,GAAG;YAACuJ,EAAE,EAAE;cAAEC,SAAS,EAAE,GAAG;cAAEmE,QAAQ,EAAE;YAAO,CAAE;YAAA5L,QAAA,EAC3C4C,QAAQ,CAACoC,GAAG,CAAC,CAACS,OAAO,EAAEvF,KAAK,kBAC3BJ,OAAA,CAACf,KAAK;cAA2B8M,SAAS,EAAE,CAAE;cAACrE,EAAE,EAAE;gBAAEsE,CAAC,EAAE,CAAC;gBAAEhE,EAAE,EAAE,CAAC;gBAAEmD,OAAO,EAAE;cAAU,CAAE;cAAAjL,QAAA,gBACrFF,OAAA,CAAC7B,GAAG;gBAACkK,OAAO,EAAC,MAAM;gBAACuD,cAAc,EAAC,eAAe;gBAACb,UAAU,EAAC,QAAQ;gBAAC/C,EAAE,EAAE,CAAE;gBAAA9H,QAAA,gBAC3EF,OAAA,CAAC7B,GAAG;kBAACkK,OAAO,EAAC,MAAM;kBAAC0C,UAAU,EAAC,QAAQ;kBAACxC,GAAG,EAAE,CAAE;kBAAArI,QAAA,gBAC7CF,OAAA,CAACd,MAAM;oBAACwI,EAAE,EAAE;sBAAEwD,KAAK,EAAE,EAAE;sBAAEe,MAAM,EAAE,EAAE;sBAAEd,OAAO,EAAE,cAAc;sBAAEe,QAAQ,EAAE;oBAAW,CAAE;oBAAAhM,QAAA,EAClFyF,OAAO,CAACJ,MAAM,CAAC4G,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;kBAAC;oBAAAzL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjC,CAAC,eACTd,OAAA,CAACvB,UAAU;oBAAC6L,OAAO,EAAC,WAAW;oBAAApK,QAAA,EAAEyF,OAAO,CAACJ;kBAAM;oBAAA5E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1D,CAAC,eAENd,OAAA,CAAC7B,GAAG;kBAACkK,OAAO,EAAC,MAAM;kBAAC0C,UAAU,EAAC,QAAQ;kBAAA7K,QAAA,gBACrCF,OAAA,CAACvB,UAAU;oBAAC6L,OAAO,EAAC,SAAS;oBAACQ,KAAK,EAAC,gBAAgB;oBAAA5K,QAAA,EACjD8G,UAAU,CAACrB,OAAO,CAACH,SAAS;kBAAC;oBAAA7E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpB,CAAC,eACbd,OAAA,CAACjB,UAAU;oBAACwL,IAAI,EAAC,OAAO;oBAACF,OAAO,EAAEA,CAAA,KAAM5E,mBAAmB,CAACE,OAAO,CAACnF,EAAE,CAAE;oBAAAN,QAAA,eACtEF,OAAA,CAACR,UAAU;sBAAC0M,QAAQ,EAAC;oBAAO;sBAAAvL,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAENd,OAAA,CAACvB,UAAU;gBAAC6L,OAAO,EAAC,OAAO;gBAAApK,QAAA,EAAEyF,OAAO,CAACb;cAAI;gBAAAnE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC;YAAA,GAnB7C6E,OAAO,CAACnF,EAAE,IAAIJ,KAAK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoBxB,CACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,gBAENd,OAAA,CAACvB,UAAU;YAAC6L,OAAO,EAAC,OAAO;YAACQ,KAAK,EAAC,gBAAgB;YAACpD,EAAE,EAAE;cAAEiE,EAAE,EAAE;YAAE,CAAE;YAAAzL,QAAA,EAAC;UAElE;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CACb;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEhBd,OAAA,CAACpC,aAAa;MAAAsC,QAAA,gBACZF,OAAA,CAAClC,MAAM;QAACuM,OAAO,EAAEnJ,OAAQ;QAAAhB,QAAA,EAAC;MAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3Cd,OAAA,CAAClC,MAAM;QACLuM,OAAO,EAAEzE,YAAa;QACtB0E,OAAO,EAAC,WAAW;QACnBQ,KAAK,EAAC,SAAS;QACfL,QAAQ,EAAE,CAAC/I,OAAO,CAACwC,IAAI,CAAC,CAAE;QAAAhE,QAAA,EAEzBiB,IAAI,GAAG,WAAW,GAAG;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEb,CAAC;AAACO,EAAA,CA1jBIL,cAA6C;EAAA,QAMrBlB,SAAS;AAAA;AAAAuM,GAAA,GANjCrL,cAA6C;AA4jBnD,eAAeA,cAAc;AAAC,IAAAD,EAAA,EAAAsL,GAAA;AAAAC,YAAA,CAAAvL,EAAA;AAAAuL,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}